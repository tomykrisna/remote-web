{"version":3,"file":"183.09d89b39ccce4311.js","mappings":"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","names":["i0","_r5","ctx_r4","handleClose","PodTncModalComponent","constructor","this","closeModal","EventEmitter","emit","static","t","_angular_core__WEBPACK_IMPORTED_MODULE_0__","selectors","inputs","showModal","outputs","decls","vars","consts","template","rf","ctx","PodTncModalComponent_ng_template_1_Template","PodTncModalComponent_ng_template_3_Template","CountdownComponent_ng_container_0_Template","ctx_r0","i","text","CountdownComponent_ng_container_1_Template","_c0","a0","$implicit","CountdownStatus","ing","pause","stop","done","CountdownTimer","ngZone","fns","commands","nextTime","start","Date","runOutsideAngular","process","length","shift","diff","count","Math","floor","len","frequency","step","setTimeout","add","fn","push","remove","indexOf","splice","ɵfac","ɵprov","token","factory","CountdownGlobalConfig","locale","demand","leftTime","format","timezone","formatDate","date","formatStr","LOCALE_ID","providedIn","CountdownComponent","timer","defCog","cdr","_notify","status","isDestroy","left","event","config","notify","Array","isArray","_config","begin","callEvent","restart","destroy","init","resume","action","frq","getLeft","_reflow","reflow","force","apply","forEach","time","Error","value","prettyText","detectChanges","run","end","stopTime","getTime","ngOnInit","ngOnDestroy","ngOnChanges","changes","firstChange","ɵcmp","type","hostVars","hostBindings","render","standalone","features","dependencies","CommonModule","i3","encapsulation","changeDetection","CountdownModule","ɵmod","ɵinj","imports","ctx_r1","transaction","payment","expiredAt","ctx_r3","transactionAmount","paymentFee","total","paymentCode","ctx_r5","ctx_r6","ctx_r7","PaymentVaModalComponent_div_0_span_9_Template","PaymentVaModalComponent_div_0_span_10_Template","_r10","ctx_r9","copyToClipboard","ctx_r11","toString","ctx_r12","showDetail","PaymentVaModalComponent_div_0_div_34_Template","PaymentVaModalComponent_div_0_p_tabView_38_Template","PaymentVaModalComponent_div_0_p_tabView_39_Template","PaymentVaModalComponent_div_0_p_tabView_40_Template","PaymentVaModalComponent_div_0_p_tabView_41_Template","PaymentVaModalComponent_div_0_p_tabView_42_Template","configCountDown","isExpired","issuerName","PaymentVaModalComponent","clipboard","isLoading","now","dayjs","expired","abs","copy","alert","i1","core_mjs_","paymentMethod","PaymentVaModalComponent_div_0_Template","FailedPaymentComponent","refresh","window","location","reload","replacePaymentType","paymentType","QRCodeComponent","renderer","sanitizer","allowEmptyString","colorDark","colorLight","cssClass","elementType","errorCorrectionLevel","margin","qrdata","scale","width","qrCodeURL","context","_this","_asyncToGenerator","createQRCode","isValidQrCodeText","data","toDataURL","qrCodeConfig","Promise","resolve","reject","err","url","toCanvas","canvas","error","toSVG","renderElement","element","node","qrcElement","nativeElement","childNodes","removeChild","appendChild","_this2","version","console","warn","undefined","isNaN","color","dark","light","centerImageSrc","imageSrc","centerImageHeight","imageHeight","centerImageWidth","imageWidth","canvasElement","createElement","getContext","then","ariaLabel","setAttribute","title","centerImage","Image","src","height","onload","drawImage","emitQRCodeURL","catch","e","svgParentElement","svgString","setProperty","svgElement","firstChild","imgElement","dataUrl","alt","message","className","name","SVGSVGElement","blob","Blob","outerHTML","urlSvg","URL","createObjectURL","urlSanitized","bypassSecurityTrustUrl","urlImage","HTMLCanvasElement","HTMLImageElement","fetch","urlResponse","viewQuery","_t","first","QRCodeModule","PaymentQrModalComponent_div_0_span_9_Template","PaymentQrModalComponent_div_0_span_10_Template","$event","_r4","onChangeURL","qrCodeDownloadLink","PaymentQrModalComponent","downloadQR","href","PaymentQrModalComponent_div_0_Template","ExpiredPaymentComponent","router","handleAction","navigate","PaymentEwalletModalComponent_div_0_span_9_Template","PaymentEwalletModalComponent_div_0_span_10_Template","modalDetail","transactionRefId","_r12","toPayment","_r14","ctx_r13","actionCheckStatus","ctx_r2","loadingCheckStatus","_r16","ctx_r15","PaymentEwalletModalComponent","bosPaymentService","route","isCheckStatusManual","snapshot","queryParamMap","get","intervalId","setInterval","clearInterval","checkStatus","invoice","open","typeCheck","detailPayment","detailPaymentInput","subscribe","next","paymentStatus","PaymentStatusTypes","SUCCESS","queryParams","replaceUrl","AWAITING_PAYMENT","i2","PaymentEwalletModalComponent_div_0_Template","PaymentEwalletModalComponent_lib_basic_button_3_Template","PaymentEwalletModalComponent_div_4_Template","PaymentEwalletModalComponent_ng_template_6_Template","PaymentEwalletModalComponent_ng_template_8_Template","item_r17","_r19","list_r13","ctx_r18","createTransaction","logo","displayName","ctx_r16","replacePaymentName","ListPaymentComponent_div_0_div_2_div_1_div_3_Template","paymentMethods","item_r23","_r25","ctx_r24","ctx_r22","_r28","ctx_r27","handleShowTnc","ListPaymentComponent_div_0_div_2_div_2_div_8_Template","ListPaymentComponent_div_0_div_2_div_1_Template","ListPaymentComponent_div_0_div_2_div_2_Template","ctx_r10","isPodAvailable","ListPaymentComponent_div_0_div_2_Template","ListPaymentComponent_div_0_ng_template_4_Template","listAvailablePayment","_r38","ctx_r37","ctx_r35","_r40","ctx_r39","va","modal","retryOrToTransaction","ListPaymentComponent_div_1_div_8_lib_basic_button_4_Template","ListPaymentComponent_div_1_div_8_lib_basic_button_5_Template","ctx_r31","paymentMethodSelected","_r42","ctx_r41","backToList","ctx_r33","_r44","ctx_r43","handleClosed","ListPaymentComponent_div_1_lib_line_loading_7_Template","ListPaymentComponent_div_1_div_8_Template","ListPaymentComponent_div_1_failed_payment_9_Template","ListPaymentComponent_div_1_expired_payment_10_Template","ListPaymentComponent_div_1_div_11_Template","modalStatus","loading","success","failed","unpaid","_r53","ctx_r52","ctx_r50","_r55","ctx_r54","qris","ListPaymentComponent_div_2_div_8_lib_basic_button_4_Template","ListPaymentComponent_div_2_div_8_lib_basic_button_5_Template","ctx_r46","_r57","ctx_r56","ctx_r48","_r59","ctx_r58","ListPaymentComponent_div_2_lib_line_loading_7_Template","ListPaymentComponent_div_2_div_8_Template","ListPaymentComponent_div_2_failed_payment_9_Template","ListPaymentComponent_div_2_expired_payment_10_Template","ListPaymentComponent_div_2_div_11_Template","_r67","ctx_r66","eWallet","ListPaymentComponent_div_3_div_8_div_2_Template","ctx_r61","_r69","ctx_r68","ctx_r63","_r71","ctx_r70","ListPaymentComponent_div_3_lib_line_loading_7_Template","ListPaymentComponent_div_3_div_8_Template","ListPaymentComponent_div_3_failed_payment_9_Template","ListPaymentComponent_div_3_expired_payment_10_Template","ListPaymentComponent_div_3_div_11_Template","_r73","ctx_r72","toListTransaction","routes","path","component","BasicContainerComponent","children","ListPaymentComponent","paymentService","paymentData","scmTransactionService","transactionService","authData","subscriptionData","countCartService","gaService","referralService","id","transactionInvoice","isRetry","pod","loadingModal","successModal","showTncPOD","getAvailablePayments","getDetailTransaction","subsDetailPayment","paymentMethodCategories","filter","val","makePaymentExpired","paymentMethodType","paymentMethodCategory","addTracker","PaymentDataType","BTOK","PaymentType","PAY_ON_DELIVERY","retryPayment","createPayment","createTransactionBTOK","SUBSCRIPTION","createTransactionSubscription","addEvent","PaymentMethodType","VA","QR","POD","EWALLET","createPaymentInput","transactionSupplierInvoice","graphQLErrors","extensions","code","back","retryPaymentInput","checkExpired","createTransactionInput","couponCode","voucher","getCountCart","planOption","paymentSubscriptionData","map","referral","referralCode","createSubscriptionTransaction","removePlanCart","useReferral","updatedAt","createdAt","totalBeforeVoucher","userId","detailTransactionSupplier","replaceState","i4","i5","i6","i7","i8","i9","ListPaymentComponent_div_0_Template","ListPaymentComponent_div_1_Template","ListPaymentComponent_div_2_Template","ListPaymentComponent_div_3_Template","ListPaymentComponent_ng_template_5_Template","ListPaymentComponent_ng_template_8_Template","ListPaymentComponent_ng_template_10_Template","PaidPaymentComponent","parseInt","toTransaction","PaymentRoutingModule","RouterModule","forChild","PaymentModule","DirectiveModule","FooterModule","PipeModule","ButtonModule","ClipboardModule","TabViewModule","LoadingsModule","BadgeModule","ModalModule","PodModal","PaymentData","platformId","isReady","isPlatformBrowser","localStorage","setItem","JSON","stringify","local","getItem","parse","paymentSubscription","PLATFORM_ID","_angular_core__WEBPACK_IMPORTED_MODULE_1__","SubscriptionData","addPlanCart","plan","removeItem","changePlanCart","existing","findIndex","getPlanCart","ButtonFooterComponent","isDisplay","contentQueries","dirIndex","ButtonFooterComponent_ng_container_1_Template","_c1","footerButtonTemplate","dijkstra","single_source_shortest_paths","graph","s","d","predecessors","costs","closest","u","v","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","PriorityQueue","make","empty","pop","cost","hasOwnProperty","msg","join","extract_shortest_path_from_predecessor_list","nodes","reverse","find_path","opts","key","T","queue","sorter","default_sorter","a","b","sort","module","exports","input","result","size","index","point","charCodeAt","second","Uint8Array","buffer","canPromise","require","QRCode","CanvasRenderer","SvgRenderer","renderCanvas","renderFunc","cb","args","slice","call","arguments","argsNum","isLastArgCb","create","bind","renderToDataURL","_","prototype","getSymbolSize","posCount","intervals","ceil","positions","coords","pos","getRowColCoords","posLength","j","Mode","ALPHA_NUM_CHARS","AlphanumericData","mode","ALPHANUMERIC","getBitsLength","getLength","write","bitBuffer","put","BitBuffer","bufIndex","num","putBit","getLengthInBits","bit","BitMatrix","reservedBit","set","row","col","reserved","xor","isReserved","encodeUtf8","ByteData","BYTE","l","ECLevel","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","L","M","Q","H","level","defaultValue","isValid","fromString","string","toLowerCase","Utils","G15_BCH","getBCHDigit","mask","EXP_TABLE","LOG_TABLE","x","n","y","KanjiData","KANJI","toSJIS","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","getMaskAt","maskPattern","Patterns","points","sameCountCol","sameCountRow","lastCol","lastRow","last","bitsCol","bitsRow","darkCount","modulesCount","pattern","setupFormatFunc","numPatterns","Object","keys","bestPattern","lowerPenalty","Infinity","p","applyMask","penalty","getPenaltyN1","getPenaltyN2","getPenaltyN3","getPenaltyN4","VersionCheck","Regex","ccBits","dataStr","testNumeric","NUMERIC","testAlphanumeric","testKanji","NumericData","group","substr","remainingNum","GF","p1","p2","coeff","mul","divident","divisor","offset","degree","poly","exp","AlignmentPattern","FinderPattern","MaskPattern","ECCode","ReedSolomonEncoder","Version","FormatInfo","Segments","setupFormatInfo","matrix","bits","getEncodedBits","mod","createSymbol","segments","fromArray","estimatedVersion","rawSegments","rawSplit","getBestVersionForData","bestVersion","dataBits","createData","getCharCountIndicator","dataTotalCodewordsBits","getSymbolTotalCodewords","getTotalCodewordsCount","remainingByte","createCodewords","totalCodewords","dataTotalCodewords","ecTotalBlocks","getBlocksCount","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","encode","max","r","moduleCount","modules","setupFinderPattern","getPositions","c","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","setupData","inc","bitIndex","byteIndex","getBestMask","options","from","toSJISFunc","setToSJISFunction","Polynomial","genPoly","initialize","generateECPolynomial","paddedData","remainder","buff","numeric","kanji","replace","byte","RegExp","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","str","test","getStringByteLength","unescape","encodeURIComponent","getSegments","regex","exec","getSegmentsFromString","numSegs","alphaNumSegs","byteSegs","kanjiSegs","isKanjiModeEnabled","BYTE_KANJI","concat","s1","s2","obj","getSegmentBitsLength","buildSingleSegment","modesHint","bestMode","getBestModeForData","array","reduce","acc","seg","buildNodes","segs","buildGraph","table","prevNodeIds","nodeGroup","currentNodeIds","lastCount","prevNodeId","optimizedSegs","mergeSegments","curr","prevSeg","toSJISFunction","CODEWORDS_COUNT","digit","f","G18_BCH","getReservedBitsCount","getTotalBitsFromDataArray","totalBits","reservedBits","MIXED","usableBits","ecl","getBestVersionForMixedData","currentVersion","getCapacity","getBestVersionForDataLength","qrData","canvasEl","getCanvasElement","document","getOptions","getImageWidth","image","createImageData","qrToImageData","clearCanvas","clearRect","style","putImageData","rendererOpts","quality","getColorAttrib","attrib","alpha","hex","toFixed","svgCmd","cmd","qrcodesize","bg","qrToPath","moveBy","newRow","lineLength","svgTag","hex2rgba","hexCode","split","hexValue","g","qrSize","getScale","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","PendingCopy","_document","textarea","_textarea","styles","position","top","opacity","readOnly","fullscreenElement","body","successful","currentFocus","activeElement","select","setSelectionRange","execCommand","focus","Clipboard","pendingCopy","beginCopy","DOCUMENT","TabPanel_div_0_ng_container_2_ng_container_1_Template","TabPanel_div_0_ng_container_2_Template","contentTemplate","TabPanel_div_0_Template","selected","cache","loaded","_c2","_c3","_c4","_c5","TabView_button_2_ChevronLeftIcon_2_Template","TabView_button_2_3_ng_template_0_Template","TabView_button_2_3_Template","TabView_button_2_Template","_r11","navBackward","previousIconTemplate","TabView_ng_template_7_li_0_ng_container_2_span_1_Template","tab_r12","leftIcon","TabView_ng_template_7_li_0_ng_container_2_span_2_1_ng_template_0_Template","TabView_ng_template_7_li_0_ng_container_2_span_2_1_Template","TabView_ng_template_7_li_0_ng_container_2_span_2_Template","leftIconTemplate","TabView_ng_template_7_li_0_ng_container_2_span_5_Template","rightIcon","TabView_ng_template_7_li_0_ng_container_2_span_6_1_ng_template_0_Template","TabView_ng_template_7_li_0_ng_container_2_span_6_1_Template","TabView_ng_template_7_li_0_ng_container_2_span_6_Template","rightIconTemplate","TabView_ng_template_7_li_0_ng_container_2_Template","header","TabView_ng_template_7_li_0_ng_container_3_Template","TabView_ng_template_7_li_0_ng_container_4_TimesIcon_1_Template","_r35","close","TabView_ng_template_7_li_0_ng_container_4_span_2_Template","TabView_ng_template_7_li_0_ng_container_4_3_ng_template_0_Template","TabView_ng_template_7_li_0_ng_container_4_3_Template","TabView_ng_template_7_li_0_ng_container_4_Template","closeIconTemplate","tabview","_c6","a1","TabView_ng_template_7_li_0_Template","ctx_r38","headerStyleClass","disabled","headerStyle","tooltip","tooltipPosition","tooltipPositionStyle","tooltipStyleClass","headerTemplate","closable","TabView_ng_template_7_Template","closed","TabView_button_10_ChevronRightIcon_2_Template","TabView_button_10_3_ng_template_0_Template","TabView_button_10_3_Template","TabView_button_10_Template","_r49","navForward","nextIconTemplate","_c7","idx","TabPanel","tabView","viewContainer","cd","ngAfterContentInit","templates","item","getType","_selected","_disabled","markForCheck","_header","updateInkBar","_leftIcon","_rightIcon","view","forwardRef","TabView","PrimeTemplate","hostAttrs","ngContentSelectors","el","orientation","onChange","onClose","activeIndexChange","backwardIsDisabled","forwardIsDisabled","initTabs","tabChangesSubscription","tabPanels","ngAfterViewChecked","tabChanged","unsubscribe","tabs","toArray","findSelectedTab","activeIndex","tab","preventDefault","selectedTab","selectedTabIndex","findTabIndex","preventActiveIndexPropagation","originalEvent","updateScrollBar","controlClose","closeTab","tabPanel","getBlockableElement","_activeIndex","navbar","tabHeader","DomHandler","findSingle","inkbar","getWidth","getOffset","scrollIntoView","block","updateButtonState","content","scrollLeft","scrollWidth","onScroll","scrollable","getVisibleButtonWidths","prevBtn","nextBtn","lastPos","styleClass","TimesIcon","ChevronLeftIcon","ChevronRightIcon","SharedModule","TooltipModule","RippleModule","Tooltip","zone","changeDetector","escape","autoHide","fitContent","hideOnEscape","_tooltipOptions","tooltipEvent","appendTo","tooltipZIndex","positionTop","positionLeft","deactivate","ngAfterViewInit","getOption","mouseEnterListener","onMouseEnter","mouseLeaveListener","onMouseLeave","clickListener","onInputClick","addEventListener","focusListener","onFocus","blurListener","onBlur","target","getTarget","simpleChange","setOption","currentValue","positionStyle","showDelay","hideDelay","life","tooltipLabel","active","container","offsetParent","updateText","align","show","hide","tooltipOptions","isAutoHide","showTimeout","activate","hasClass","toElement","relatedTarget","onPressEscape","clearHideTimeout","duration","hideTimeout","clearShowTimeout","tooltipArrow","tooltipText","display","bindContainerMouseleaveListener","containerMouseleaveListener","listen","unbindContainerMouseleaveListener","fadeIn","ZIndexUtils","zIndex","bindDocumentResizeListener","bindScrollListener","clear","innerHTML","createTextNode","alignTop","isOutOfBounds","alignBottom","alignRight","alignLeft","getHostOffset","getBoundingClientRect","getWindowScrollLeft","getWindowScrollTop","preAlign","hostOffset","getOuterWidth","getOuterHeight","option","defaultClassName","targetTop","targetLeft","viewport","getViewport","onWindowResize","resizeListener","unbindDocumentResizeListener","removeEventListener","scrollHandler","ConnectedOverlayScrollHandler","unbindScrollListener","unbindEvents","parentElement","clearTimeouts","clearTimeout","ɵdir"],"sourceRoot":"webpack:///","sources":["./apps/youtap-bos/src/app/main/modal/pod-tnc-modal/pod-tnc-modal.component.html","./apps/youtap-bos/src/app/main/modal/pod-tnc-modal/pod-tnc-modal.component.ts","./node_modules/ngx-countdown/fesm2020/ngx-countdown.mjs","./apps/youtap-bos/src/app/main/payment/payment-va-modal/payment-va-modal.component.html","./apps/youtap-bos/src/app/main/payment/payment-va-modal/payment-va-modal.component.ts","./apps/youtap-bos/src/app/main/payment/failed-payment/failed-payment.component.ts","./apps/youtap-bos/src/app/main/payment/failed-payment/failed-payment.component.html","./node_modules/angularx-qrcode/fesm2020/angularx-qrcode.mjs","./apps/youtap-bos/src/app/main/payment/payment-qr-modal/payment-qr-modal.component.html","./apps/youtap-bos/src/app/main/payment/payment-qr-modal/payment-qr-modal.component.ts","./apps/youtap-bos/src/app/main/payment/expired-payment/expired-payment.component.ts","./apps/youtap-bos/src/app/main/payment/expired-payment/expired-payment.component.html","./apps/youtap-bos/src/app/main/payment/payment-ewallet-modal/payment-ewallet-modal.component.html","./apps/youtap-bos/src/app/main/payment/payment-ewallet-modal/payment-ewallet-modal.component.ts","./apps/youtap-bos/src/app/main/payment/list-payment/list-payment.component.html","./apps/youtap-bos/src/app/main/payment/payment-routing.module.ts","./apps/youtap-bos/src/app/main/payment/list-payment/list-payment.component.ts","./apps/youtap-bos/src/app/main/payment/paid-payment/paid-payment.component.ts","./apps/youtap-bos/src/app/main/payment/paid-payment/paid-payment.component.html","./apps/youtap-bos/src/app/main/payment/payment.module.ts","./apps/youtap-bos/src/app/shared/data/payment.data.ts","./apps/youtap-bos/src/app/shared/data/subscription.data.ts","./apps/youtap-bos/src/app/shared/layout/footer/button-footer/button-footer.component.ts","./node_modules/dijkstrajs/dijkstra.js","./node_modules/encode-utf8/index.js","./node_modules/qrcode/lib/browser.js","./node_modules/qrcode/lib/can-promise.js","./node_modules/qrcode/lib/core/alignment-pattern.js","./node_modules/qrcode/lib/core/alphanumeric-data.js","./node_modules/qrcode/lib/core/bit-buffer.js","./node_modules/qrcode/lib/core/bit-matrix.js","./node_modules/qrcode/lib/core/byte-data.js","./node_modules/qrcode/lib/core/error-correction-code.js","./node_modules/qrcode/lib/core/error-correction-level.js","./node_modules/qrcode/lib/core/finder-pattern.js","./node_modules/qrcode/lib/core/format-info.js","./node_modules/qrcode/lib/core/galois-field.js","./node_modules/qrcode/lib/core/kanji-data.js","./node_modules/qrcode/lib/core/mask-pattern.js","./node_modules/qrcode/lib/core/mode.js","./node_modules/qrcode/lib/core/numeric-data.js","./node_modules/qrcode/lib/core/polynomial.js","./node_modules/qrcode/lib/core/qrcode.js","./node_modules/qrcode/lib/core/reed-solomon-encoder.js","./node_modules/qrcode/lib/core/regex.js","./node_modules/qrcode/lib/core/segments.js","./node_modules/qrcode/lib/core/utils.js","./node_modules/qrcode/lib/core/version-check.js","./node_modules/qrcode/lib/core/version.js","./node_modules/qrcode/lib/renderer/canvas.js","./node_modules/qrcode/lib/renderer/svg-tag.js","./node_modules/qrcode/lib/renderer/utils.js","./node_modules/@angular/cdk/fesm2022/clipboard.mjs","./node_modules/primeng/fesm2020/primeng-tabview.mjs","./node_modules/primeng/fesm2020/primeng-tooltip.mjs"],"sourcesContent":["<lib-bottom-modal [showModal]=\"showModal\" (closeOutsideModal)=\"handleClose()\">\n  <ng-template #headerTemplate>\n    <div class=\"flex flex-row justify-between items-center z-10 relative h-[5vh]\">\n      <span class=\"text-grey-1\">Pay On Delivery</span>\n      <img\n        class=\"cursor-pointer\"\n        src=\"assets/images/svg/icon/times-icon.svg\"\n        alt=\"times-icon\"\n        (click)=\"handleClose()\">\n    </div>\n  </ng-template>\n  <ng-template #bodyTemplate>\n    <div class=\"flex flex-col text-[14px] text-justify h-[60vh] overflow-y-scroll scrollbar-hide\">\n      <p><strong>Pay  On  Delivery  (POD)</strong>  adalah  metode  pengiriman  pesanan  Pelanggan  dimana  Pelanggan dapat  melakukan\n        pembayaran  pada  saat  pesanan  sampai  pada  alamat  Pelanggan  yang  dituju  dan pesanan diterima oleh Pelanggan.</p>\n      <strong class=\"mt-3\">Pengiriman</strong>\n      <p class=\"mb-1\">Proses pengiriman dilakukan oleh Kurir Toko milik Mitra.</p>\n      <p class=\"mb-1\">Pelanggan dapat memantau proses pengiriman dengan menghubungi Kurir Toko milik Mitra melalui nomor  telepon  Kurir\n        Toko  yang  diterima  Pelanggan  melalui  portal  Belanja  Stok  setelah  transaksi diproses untuk pengiriman oleh Mitra.</p>\n      <p class=\"mb-1\">Mitra harus memastikan bahwa Pesanan yang dikirimkan sudah sesuai.</p>\n      <strong class=\"mt-3\">Proses Pembayaran</strong>\n      <p class=\"mb-1\">Proses pembayaran dilakukan oleh Pelanggan secara <strong>non-tunai atau cashless</strong> melalui portal Belanja Stok milik Pelanggan.\n      <p class=\"mb-1\">Kurir Toko tidak diperkenankan untuk meninggalkan lokasi pengiriman\n        sampai Kurir Toko memastikan melalui  aplikasi karirbahwa pembayaran telah dilakukan oleh Pelanggan.</p>\n      <p class=\"mb-1\">Kurir Toko tidak diperkenankan/dilarang menerima pembayaran dengan uang tunai\n        atau dengan cara lain selain yang ditentukan sesuai prosedur layanan POD dari Pelanggan.</p>\n      <strong class=\"mt-3\">Pembatalan Pesanan</strong>\n      <p class=\"mb-1\">Pelanggan  mengerti  bahwa  pesanan  Pelanggan  dapat  dibatalkan  secara  sepihak  oleh   Kurir\n        Toko melalui aplikasi web kurir apabila terjadi hal sebagai berikut:</p>\n      <ol style=\"list-style: auto\" class=\"pl-3\">\n        <li>Alamat Pelanggan tidak dapat ditemukan;</li>\n        <li>Pelanggan tidak dapat dihubungi oleh Kurir Toko;</li>\n        <li>Pelanggan tidak ada di tempat; atau</li>\n        <li>Kondisi  lainnya  yang  dianggap  Kurir  Toko  atau  Mitra  menyebabkan  pesanan  tidak  dapat dikirimkan.</li>\n      </ol>\n      <strong class=\"mt-3\">Pembatasan Tanggung Jawab</strong>\n      <p class=\"mt-1\">Segala bentuk risiko atas ketidakesuaian, hilang atau rusaknya barang pesanan milik Pelanggan yang\n        disebabkan oleh kelalaian atau kesengajaan Kurir Toko atau Mitra sepenuhnya ditanggung oleh Mitra. Youtap  Indonesia\n        tidak  dapat  dimintakan  pertanggung  jawaban  atas  risiko  ketidaksesuaian,  hilang atau rusaknya barang pesanan\n        milik Pelanggan yang disebabkan oleh kelalaian ataupun kesengajaan oleh Kurir Toko atau Mitra.</p>\n      <p class=\"mt-1\">Mitra  adalah  pihak  yang  wajib  bertanggung  jawab  atas  kerugian  yang  dialami  oleh  Pelanggan  yang disebabkan\n        oleh  ketidaksesuaian,  hilang  atau  rusaknya  barang  pesanan  milik  Pelanggan,  termasuk namun tidak terbatas\n        pada penggantian barang yang baru sesuai dengan pesanan Pelanggan.</p>\n      <strong class=\"mt-3\">Informasi Layanan</strong>\n      <p class=\"mt-1\">Dalam  hal  terdapat  pertanyaan  dan/atau  keluhan/pengaduan  sehubungan  dengan  penggunaan layanan POD, maka\n        Pelanggan dapat mengajukan pertanyaan dan/atau keluhan secara tertulis melalui titik pelayanan Youtap Indonesia</p>\n      <ul class=\"pl-3 mt-1 list-disc\">\n        <li>Situs: <a class=\"text-primary-yt-blue\" href=\"https://www.youtap.id\">www.youtap.id</a></li>\n        <li><a class=\"text-primary-yt-blue\" href=\"https://www.facebook.com/youtapindonesia/\">Facebook Fanpage Youtap Indonesia</a></li>\n        <li>Instagram <a class=\"text-primary-yt-blue\" href=\"https://www.instagram.com/youtap.id/\">&#64;youtap_id</a></li>\n        <li>Twitter <a class=\"text-primary-yt-blue\" href=\"https://twitter.com/Youtapid\">&#64;Youtapid</a></li>\n        <li>Layanan Pelanggan:</li>\n        <li><a class=\"text-primary-yt-blue\" href=\"tel:1500-523\">1500 523</a></li>\n        <li><a class=\"text-primary-yt-blue\" href=\"https://api.whatsapp.com/send?phone=08111500523\">0811-1500-523</a></li>\n        <li><a class=\"text-primary-yt-blue\" href=\"mailto:halo@youtap.id\">halo&#64;youtap.id</a></li>\n      </ul>\n    </div>\n  </ng-template>\n</lib-bottom-modal>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'pod-tnc-modal',\n  templateUrl: './pod-tnc-modal.component.html'\n})\nexport class PodTncModalComponent {\n  @Input() showModal!: boolean;\n  @Output() closeModal = new EventEmitter<string>();\n\n  handleClose() {\n    this.closeModal.emit();\n  }\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, LOCALE_ID, Inject, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { formatDate, CommonModule } from '@angular/common';\n\nvar CountdownStatus;\n(function (CountdownStatus) {\n    CountdownStatus[CountdownStatus[\"ing\"] = 0] = \"ing\";\n    CountdownStatus[CountdownStatus[\"pause\"] = 1] = \"pause\";\n    CountdownStatus[CountdownStatus[\"stop\"] = 2] = \"stop\";\n    CountdownStatus[CountdownStatus[\"done\"] = 3] = \"done\";\n})(CountdownStatus || (CountdownStatus = {}));\n\nclass CountdownTimer {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.fns = [];\n        this.commands = [];\n        this.nextTime = 0;\n        this.ing = false;\n    }\n    start() {\n        if (this.ing === true) {\n            return;\n        }\n        this.ing = true;\n        this.nextTime = +new Date();\n        this.ngZone.runOutsideAngular(() => {\n            this.process();\n        });\n    }\n    process() {\n        while (this.commands.length) {\n            this.commands.shift()();\n        }\n        let diff = +new Date() - this.nextTime;\n        const count = 1 + Math.floor(diff / 100);\n        diff = 100 - (diff % 100);\n        this.nextTime += 100 * count;\n        for (let i = 0, len = this.fns.length; i < len; i += 2) {\n            let frequency = this.fns[i + 1];\n            // 100/s\n            if (0 === frequency) {\n                this.fns[i](count);\n                // 1000/s\n            }\n            else {\n                // 先把末位至0，再每次加2\n                frequency += 2 * count - 1;\n                const step = Math.floor(frequency / 20);\n                if (step > 0) {\n                    this.fns[i](step);\n                }\n                // 把末位还原成1\n                this.fns[i + 1] = (frequency % 20) + 1;\n            }\n        }\n        if (!this.ing) {\n            return;\n        }\n        setTimeout(() => this.process(), diff);\n    }\n    add(fn, frequency) {\n        this.commands.push(() => {\n            this.fns.push(fn);\n            this.fns.push(frequency === 1000 ? 1 : 0);\n            this.ing = true;\n        });\n        return this;\n    }\n    remove(fn) {\n        this.commands.push(() => {\n            const i = this.fns.indexOf(fn);\n            if (i !== -1) {\n                this.fns.splice(i, 2);\n            }\n            this.ing = this.fns.length > 0;\n        });\n        return this;\n    }\n}\nCountdownTimer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownTimer, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nCountdownTimer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownTimer });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownTimer, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n// tslint:disable: no-inferrable-types\nclass CountdownGlobalConfig {\n    constructor(locale) {\n        this.locale = locale;\n        this.demand = false;\n        this.leftTime = 0;\n        this.format = 'HH:mm:ss';\n        this.timezone = '+0000';\n        this.formatDate = ({ date, formatStr, timezone }) => {\n            return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n        };\n    }\n}\nCountdownGlobalConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownGlobalConfig, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nCountdownGlobalConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownGlobalConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownGlobalConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }]; } });\n\nclass CountdownComponent {\n    constructor(locale, timer, defCog, cdr, ngZone) {\n        this.locale = locale;\n        this.timer = timer;\n        this.defCog = defCog;\n        this.cdr = cdr;\n        this.ngZone = ngZone;\n        this.frequency = 1000;\n        this._notify = {};\n        this.status = CountdownStatus.ing;\n        this.isDestroy = false;\n        this.i = {};\n        this.left = 0;\n        this.event = new EventEmitter();\n    }\n    set config(i) {\n        if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n            i.notify = [i.notify];\n        }\n        this._config = i;\n    }\n    get config() {\n        return this._config;\n    }\n    /**\n     * Start countdown, you must manually call when `demand: false`\n     */\n    begin() {\n        this.status = CountdownStatus.ing;\n        this.callEvent('start');\n    }\n    /**\n     * Restart countdown\n     */\n    restart() {\n        if (this.status !== CountdownStatus.stop) {\n            this.destroy();\n        }\n        this.init();\n        this.callEvent('restart');\n    }\n    /**\n     * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n     */\n    stop() {\n        if (this.status === CountdownStatus.stop) {\n            return;\n        }\n        this.status = CountdownStatus.stop;\n        this.destroy();\n        this.callEvent('stop');\n    }\n    /**\n     * Pause countdown, you can use `resume` to recover again\n     */\n    pause() {\n        if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n            return;\n        }\n        this.status = CountdownStatus.pause;\n        this.callEvent('pause');\n    }\n    /**\n     * Resume countdown\n     */\n    resume() {\n        if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n            return;\n        }\n        this.status = CountdownStatus.ing;\n        this.callEvent('resume');\n    }\n    callEvent(action) {\n        this.event.emit({ action, left: this.left, status: this.status, text: this.i.text });\n    }\n    init() {\n        const { locale, defCog } = this;\n        const config = (this.config = {\n            ...new CountdownGlobalConfig(locale),\n            ...defCog,\n            ...this.config,\n        });\n        // tslint:disable-next-line: no-bitwise\n        const frq = (this.frequency = ~config.format.indexOf('S') ? 100 : 1000);\n        this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n        this.getLeft();\n        // bind reflow to me\n        const _reflow = this.reflow;\n        this.reflow = (count = 0, force = false) => _reflow.apply(this, [count, force]);\n        if (Array.isArray(config.notify)) {\n            config.notify.forEach((time) => {\n                if (time < 1) {\n                    throw new Error(`The notify config must be a positive integer.`);\n                }\n                time = time * 1000;\n                time = time - (time % frq);\n                this._notify[time] = true;\n            });\n        }\n        this.timer.add(this.reflow, frq).start();\n        this.reflow(0, true);\n    }\n    destroy() {\n        this.timer.remove(this.reflow);\n        return this;\n    }\n    /**\n     * 更新时钟\n     */\n    reflow(count = 0, force = false) {\n        if (this.isDestroy) {\n            return;\n        }\n        const { status, config, _notify } = this;\n        if (!force && status !== CountdownStatus.ing) {\n            return;\n        }\n        let value = (this.left = this.left - this.frequency * count);\n        if (value < 1) {\n            value = 0;\n        }\n        this.i = {\n            value,\n            text: config.formatDate({ date: value, formatStr: config.format, timezone: config.timezone }),\n        };\n        if (typeof config.prettyText === 'function') {\n            this.i.text = config.prettyText(this.i.text);\n        }\n        this.cdr.detectChanges();\n        if (config.notify === 0 || _notify[value]) {\n            this.ngZone.run(() => {\n                this.callEvent('notify');\n            });\n        }\n        if (value === 0) {\n            this.ngZone.run(() => {\n                this.status = CountdownStatus.done;\n                this.destroy();\n                this.callEvent('done');\n            });\n        }\n    }\n    /**\n     * 获取倒计时剩余帧数\n     */\n    getLeft() {\n        const { config, frequency } = this;\n        let left = config.leftTime * 1000;\n        const end = config.stopTime;\n        if (!left && end) {\n            left = end - new Date().getTime();\n        }\n        this.left = left - (left % frequency);\n    }\n    ngOnInit() {\n        this.init();\n        if (!this.config.demand) {\n            this.begin();\n        }\n    }\n    ngOnDestroy() {\n        this.isDestroy = true;\n        this.destroy();\n    }\n    ngOnChanges(changes) {\n        if (!changes.config.firstChange) {\n            this.restart();\n        }\n    }\n}\nCountdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownComponent, deps: [{ token: LOCALE_ID }, { token: CountdownTimer }, { token: CountdownGlobalConfig }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nCountdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CountdownComponent, isStandalone: true, selector: \"countdown\", inputs: { config: \"config\", render: \"render\" }, outputs: { event: \"event\" }, host: { properties: { \"class.count-down\": \"true\" } }, providers: [CountdownTimer], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'countdown',\n                    template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n                    host: { '[class.count-down]': 'true' },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    imports: [CommonModule],\n                    providers: [CountdownTimer],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }, { type: CountdownTimer }, { type: CountdownGlobalConfig }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; }, propDecorators: { config: [{\n                type: Input\n            }], render: [{\n                type: Input\n            }], event: [{\n                type: Output\n            }] } });\n\nclass CountdownModule {\n}\nCountdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCountdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, imports: [CountdownComponent], exports: [CountdownComponent] });\nCountdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, imports: [CountdownComponent] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CountdownComponent],\n                    exports: [CountdownComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountdownComponent, CountdownGlobalConfig, CountdownModule, CountdownStatus, CountdownTimer };\n//# sourceMappingURL=ngx-countdown.mjs.map\n","<div *ngIf=\"transaction\">\n  <div class=\"p-4 text-center flex flex-col bg-secondary-blue-light mb-3\">\n    <h3 class=\"text-[16px] font-light\">Selesaikan Pembayaran dalam</h3>\n    <h2 class=\"text-[18px] font-medium text-primary-yt-orange mb-2\">\n      <countdown [config]=\"configCountDown\"></countdown>\n    </h2>\n    <span class=\"text-[14px] font-light\">Batas Akhir Pembayaran</span>\n    <h3 class=\"text-[16px] font-bold\">\n      <span *ngIf=\"!isExpired\">\n        {{ transaction.payment.expiredAt | formatDate : 'DD MMM YYYY, HH:mm' }}\n      </span>\n      <span *ngIf=\"isExpired\"> Pembayaran Kadaluarsa </span>\n    </h3>\n  </div>\n\n  <div class=\"mx-2 mb-3\">\n    <div class=\"p-4 border-[1px] border-grey-5\">\n      <div class=\"mb-3\">\n        <img\n          src=\"./assets/images/png/payment/{{\n            transaction.payment.issuerName\n          }}.png\"\n          [alt]=\"transaction.payment.issuerName\"\n          width=\"100px\"\n          class=\"m-auto\" />\n      </div>\n      <span class=\"text-[14px] text-grey-4\">Nomor Virtual Account</span>\n      <div class=\"flex flex-row items-center gap-x-4 mb-4\">\n        <h1 class=\"text-[20px] font-medium\">\n          {{ transaction.payment.paymentCode }}\n        </h1>\n        <div\n          class=\"flex flex-row gap-x-1 items-center text-[14px] text-primary-yt-blue\"\n          (click)=\"copyToClipboard(transaction.payment.paymentCode)\">\n          <i class=\"pi pi-copy text-primary-yt-blue\"></i>\n          Salin\n        </div>\n      </div>\n      <span class=\"text-[14px] text-grey-4\">Total Pembayaran</span>\n      <div class=\"flex flex-row justify-between items-center\">\n        <div class=\"flex flex-row items-center gap-x-4\">\n          <h1 class=\"text-[20px] font-medium\">\n            {{ transaction.total | libCurrency : false : 3 : 'IDR' }}\n          </h1>\n          <div\n            class=\"flex flex-row gap-x-1 items-center text-[14px] text-primary-yt-blue\"\n            (click)=\"copyToClipboard(transaction.total.toString())\">\n            <i class=\"pi pi-copy text-primary-yt-blue\"></i>\n            Salin\n          </div>\n        </div>\n        <lib-basic-button\n          title=\"Lihat Detail\"\n          padding=\"!px-2 !py-1\"\n          iconPosition=\"right\"\n          [icon]=\"\n            showDetail ? 'arrow-up-blue-no-bg' : 'arrow-bottom-blue-no-bg'\n          \"\n          iconSize=\"w-4\"\n          textSize=\"text-[14px]\"\n          bColor=\"!bg-secondary-blue-light\"\n          textColor=\"text-primary-yt-blue\"\n          (handleEmit)=\"showDetail = !showDetail\"></lib-basic-button>\n      </div>\n    </div>\n    <div *ngIf=\"showDetail\">\n      <div class=\"p-4 border-x-[1px] border-grey-5\">\n        <div class=\"flex flex-row justify-between gap-x-2 mb-2\">\n          <span class=\"font-medium\">Total Tagihan</span>\n          <span class=\"font-medium text-primary-yt-blue\">{{\n            transaction.payment.transactionAmount | libCurrency : false\n          }}</span>\n        </div>\n        <div class=\"flex flex-row justify-between gap-x-2\">\n          <span>Biaya Layanan</span>\n          <span>{{\n            transaction.payment.paymentFee | libCurrency : false\n          }}</span>\n        </div>\n      </div>\n      <div class=\"p-4 border-[1px] border-grey-5\">\n        <div class=\"flex flex-row justify-between gap-x-2\">\n          <span class=\"font-medium\">Total Tagihan</span>\n          <span class=\"font-medium text-primary-yt-blue\">{{\n            transaction.total | libCurrency : false\n          }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"p-4 pb-24 bg-white\">\n    <h1 class=\"text-[18px]\">Cara Pembayaran</h1>\n    <p-tabView *ngIf=\"transaction.payment.issuerName === 'bca_va'\">\n      <p-tabPanel header=\"ATM BCA\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Masukkan Kartu ATM BCA & PIN</li>\n          <li>\n            Pilih menu Transaksi Lainnya > Transfer > ke Rekening BCA Virtual\n            Account\n          </li>\n          <li>\n            Masukkan 5 angka kode perusahaan untuk Youtap (38140) dan Nomor HP\n            yang terdaftar di akun Youtap Anda (Contoh:\n            {{ transaction.payment.paymentCode }})\n          </li>\n          <li>\n            Pastikan detil pembayaran sudah sesuai seperti No VA, Nama,\n            Perusahaan/Produk\n          </li>\n          <li>Masukkan Jumlah Transfer sesuai dengan Total Tagihan</li>\n          <li>\n            Di halaman konfirmasi, pastikan detil pembayaran sudah sesuai\n            seperti No VA, Nama, Perus/Produk dan Total Tagihan, benar\n          </li>\n          <li>Ikuti instruksi untuk menyelesaikan transaksi</li>\n          <li>Simpan struk transaksi sebagai bukti pembayaran</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"M-BCA\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Lakukan log in pada aplikasi BCA Mobile.</li>\n          <li>Pilih menu m-BCA, kemudian masukkan kode akses m-BCA.</li>\n          <li>Pilih m-Transfer > BCA Virtual Account.</li>\n          <li>\n            Pilih dari Daftar Transfer, atau masukkan 5 angka kode perusahaan\n            untuk Youtap (38140) dan Nomor HP yang kamu daftarkan di akun Youtap\n            (Contoh: {{ transaction.payment.paymentCode }}) klik OK.\n          </li>\n          <li>Pastikan nama kamu dan Total Tagihannya sudah benar.</li>\n          <li>Kemudian klik Ok dan masukkan pin m-BCA.</li>\n          <li>\n            Pembayaran selesai. Simpan notifikasi yang muncul sebagai bukti\n            pembayaran.\n          </li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"Klik BCA\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>\n            Lakukan log in pada aplikasi KlikBCA Individual\n            (https://ibank.klikbca.com/).\n          </li>\n          <li>Masukkan User ID dan PIN.</li>\n          <li>Pilih Transfer Dana > Transfer ke BCA Virtual Account.</li>\n          <li>\n            Masukkan nomor BCA Virtual Account (38140) dan Nomor HP yang kamu\n            daftarkan di akun Youtap (Contoh:\n            {{ transaction.payment.paymentCode }}). Pastikan nama yang muncul\n            dan Total Tagihannya benar.\n          </li>\n          <li>Kalau sudah benar, klik Lanjutkan.</li>\n          <li>Cetak nomor referensi sebagai bukti transaksinya.</li>\n        </ol>\n      </p-tabPanel>\n    </p-tabView>\n    <p-tabView *ngIf=\"transaction.payment.issuerName === 'mandiri_va'\">\n      <p-tabPanel header=\"ATM Mandiri\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Masukkan kartu ATM dan Pin.</li>\n          <li>Pilih Menu Bayar/Beli.</li>\n          <li>Pilih menu Lainnya, hingga menemukan menu Multipayment.</li>\n          <li>Masukkan kode perusahaan \"Sprint\" 70018, lalu pilih Benar.</li>\n          <li>\n            Masukkan Nomor Virtual Account Youtap (Contoh:\n            {{ transaction.payment.paymentCode }}), lalu pilih tombol Benar.\n          </li>\n          <li>Masukkan Angka 1 untuk memilih tagihan, lalu pilih tombol Ya.</li>\n          <li>Akan muncul konfirmasi pembayaran, lalu pilih tombol Ya.</li>\n          <li>Simpan struk sebagai bukti pembayaran Anda.</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"Mandiri Internet Banking/Livin’ by Mandiri\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>\n            Login Livin' By Mandiri dengan memasukkan Username dan Password\n          </li>\n          <li>Pilih menu \"Pembayaran\"</li>\n          <li>Pilih menu \"Multipayment\"</li>\n          <li>Pilih penyedia jasa \"Sprint\" dengan kode perusahaan 70018.</li>\n          <li>Masukkan \"Nomor Virtual Account\", konfirmasi</li>\n          <li>Konfirmasi nama pembayaran, klik Lanjut</li>\n          <li>\n            Setelah muncul tagihan, pilih \"Nominal\" yang akan dibayarkan, lalu\n            pilih Lanjut\n          </li>\n          <li>Konfirmasi pembayaran yang akan dibayarkan, konfirmasi</li>\n          <li>Masukkan PIN / Challenge Code Token</li>\n          <li>Transaksi selesai, simpan bukti bayar Anda</li>\n        </ol>\n      </p-tabPanel>\n    </p-tabView>\n    <p-tabView *ngIf=\"transaction.payment.issuerName === 'bri_va'\">\n      <p-tabPanel header=\"ATM BRI\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Lakukan pembayaran melalui ATM Bank BRI.</li>\n          <li>Pilih menu Transaksi Lain.</li>\n          <li>Pilih menu Pembayaran.</li>\n          <li>Pilih menu Lainnya.</li>\n          <li>Pilih menu BRIVA.</li>\n          <li>\n            Masukkan 5 angka kode perusahaan untuk Youtap: 14108 dan Nomor HP\n            yang terdaftar di akun Youtap Anda (Contoh:\n            {{ transaction.payment.paymentCode }}).\n          </li>\n          <li>Pilih Ya untuk memproses pembayaran.</li>\n          <li>Transaksi anda selesai.</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"MBanking BRI\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Masuk ke aplikasi BRI Mobile dan pilih Mobile Banking BRI.</li>\n          <li>Pilih menu Info.</li>\n          <li>Pilih menu BRIVA.</li>\n          <li>\n            Masukkan 5 angka kode perusahaan untuk Youtap: 14108 dan Nomor HP\n            yang terdaftar di akun Youtap Anda (Contoh:\n            {{ transaction.payment.paymentCode }}).\n          </li>\n          <li>Masukkan PIN Mobile/SMS Banking BRI.</li>\n          <li>Anda akan mendapatkan notifikasi pembayaran melalui SMS.</li>\n          <li>Transaksi anda selesai.</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"Internet Banking BRI\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Masukan “User ID” dan “Password”.</li>\n          <li>Pilih “Pembayaran” .</li>\n          <li>Pilih “BRIVA”.</li>\n          <li>Pilih rekening Pembayar.</li>\n          <li>\n            Masukkan “Nomor Virtual Account BRI” Anda (Contoh:\n            {{ transaction.payment.paymentCode }}).\n          </li>\n          <li>Masukkan nominal yang akan dibayar.</li>\n          <li>Masukkan “Password” dan “Mtoken” anda.</li>\n          <li>Transaksi anda selesai.</li>\n        </ol>\n      </p-tabPanel>\n    </p-tabView>\n    <p-tabView *ngIf=\"transaction.payment.issuerName === 'bni_va'\">\n      <p-tabPanel header=\"ATM BNI\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Masukkan Kartu Anda.</li>\n          <li>Pilih Bahasa.</li>\n          <li>Masukkan PIN ATM Anda.</li>\n          <li>Kemudian, pilih Menu Lainnya.</li>\n          <li>\n            Pilih Transfer dan pilih Jenis rekening yang akan Anda gunakan\n            (Contoh: \"Dari Rekening Tabungan\").\n          </li>\n          <li>\n            Pilih Virtual Account Billing. Masukkan nomor Virtual Account Anda\n            (Contoh: {{ transaction.payment.paymentCode }}).\n          </li>\n          <li>\n            Tagihan yang harus dibayarkan akan muncul pada layar konfirmasi.\n          </li>\n          <li>Konfirmasi, apabila telah sesuai, lanjutkan transaksi.</li>\n          <li>Transaksi Anda telah selesai.</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"MBanking BNI\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Akses BNI Mobile Banking melalui handphone.</li>\n          <li>Masukkan User ID dan password.</li>\n          <li>Pilih menu Transfer.</li>\n          <li>\n            Pilih menu Virtual Account Billing, lalu pilih rekening debet.\n          </li>\n          <li>\n            Masukkan nomor Virtual Account Anda (Contoh:\n            {{ transaction.payment.paymentCode }}) pada menu Input Baru.\n          </li>\n          <li>\n            Tagihan yang harus dibayarkan akan muncul pada layar konfirmasi.\n          </li>\n          <li>Konfirmasi transaksi dan masukkan Password Transaksi.</li>\n          <li>Pembayaran Anda Telah Berhasil.</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"iBank personal BRI\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Akses ibank.bni.co.id kemudian klik Enter.</li>\n          <li>Masukkan User ID dan password.</li>\n          <li>Klik menu Transfer, lalu pilih Virtual Account Billing.</li>\n          <li>\n            Kemudian, masukan nomor Virtual Account Anda (Contoh:\n            {{ transaction.payment.paymentCode }}) yang akan dibayarkan.\n          </li>\n          <li>\n            Lalu pilih rekening debet yang akan digunakan. Kemudian tekan\n            Lanjut.\n          </li>\n          <li>\n            Tagihan yang harus dibayarkan akan muncul pada layar konfirmasi.\n          </li>\n          <li>Masukkan Kode Otentikasi Token.</li>\n          <li>Anda akan menerima notifikasi bahwa transaksi berhasil.</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"SMS Banking BNI\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Buka aplikasi SMS Banking BNI.</li>\n          <li>Pilih menu Transfer.</li>\n          <li>Pilih menu Transfer rekening BNI.</li>\n          <li>\n            Masukkan nomor rekening tujuan dengan 16 digit Nomor Virtual Account\n            (Contoh: {{ transaction.payment.paymentCode }}).\n          </li>\n          <li>\n            Masukkan nominal transfer sesuai tagihan. Nominal yang berbeda tidak\n            dapat diproses.\n          </li>\n          <li>Pilih Proses, kemudian Setuju.</li>\n          <li>\n            Balas sms dengan mengetik pin sesuai dengan instruksi BNI. Anda akan\n            menerima notif bahwa transaksi berhasil.\n          </li>\n          <li>\n            Atau dapat juga langsung mengetik sms dengan format:\n            TRF[SPASI]NomorVA[SPASI]NOMINAL dan kemudian kirim ke 3346. Contoh:\n            TRF {{ transaction.payment.paymentCode }} 44000\n          </li>\n        </ol>\n      </p-tabPanel>\n    </p-tabView>\n    <p-tabView *ngIf=\"transaction.payment.issuerName === 'bina_va'\">\n      <p-tabPanel header=\"ATM Bank INA\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Masukkan Kartu ATM Anda</li>\n          <li>Pilih Bahasa (Indonesia atau English)</li>\n          <li>Masukkan PIN ATM Anda.</li>\n          <li>Pilih \"Transaksi Lain\"</li>\n          <li>Pilih \"Transfer\"</li>\n          <li>Pilih \"Bank Ina\"</li>\n          <li>\n            Masukkan nomor rekening tujuan dengan Nomor Rekening VA (Kode Prefix\n            + No. Tagihan)\n          </li>\n          <li>Contoh : 91202 + No. Tagihan</li>\n          <li>Contoh : 9120211321155103</li>\n          <li>Masukkan nominal pembayaran</li>\n          <li>Transaksi Berhasil: Simpan Bukti</li>\n        </ol>\n      </p-tabPanel>\n      <p-tabPanel header=\"MBanking INA\">\n        <ol class=\"p-0 text-[14px]\">\n          <li>Login aplikasi IBMB Bank Ina</li>\n            <li>Pilih menu “Transfer Dana”</li>\n            <li>Pilih “Daftar Tujuan Transfer”,</li>\n            <li>Pilih “Tujuan ke Rekening Bank Ina” dan tanda +.</li>\n            <li>\n              Masukkan nomor rekening VA, contoh:\n              <ul class=\"list-disc pl-3\">\n                <li>Contoh : 91202 + No. Tagihan</li>\n                <li>Contoh : 9120211321155103</li>\n              </ul>\n            </li>\n            <li>Pilih tombol > untuk melanjutkan, masukkan Kode PIN.</li>\n            <li>Nomor VA sukses disimpan</li>\n            <li>Pilih menu “Transfer ke Bank Ina”.</li>\n            <li>Pilih rekening VA dari daftar transfer.</li>\n            <li>Masukan nominal transfer dan Berita.</li>\n            <li>Pilih tombol > untuk melanjutkan.</li>\n            <li>Masukkan keterangan dan Kode PIN.</li>\n            <li>Transaksi Berhasil: Simpan Bukti</li>\n        </ol>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>\n","import { Clipboard } from \"@angular/cdk/clipboard\";\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport {\n  PaymentMethod,\n  SCMTransaction\n} from \"@youtap-web-lib\";\nimport * as dayjs from \"dayjs\";\n\n@Component({\n  selector: \"payment-va-modal\",\n  templateUrl: \"./payment-va-modal.component.html\"\n})\nexport class PaymentVaModalComponent implements OnInit {\n  showDetail = false;\n  @Input() transaction!: SCMTransaction;\n  @Input() paymentMethod!: PaymentMethod;\n  configCountDown = {\n    leftTime: 0\n  };\n  isLoading = true;\n  isExpired = false;\n\n  constructor(\n    private clipboard: Clipboard\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.transaction) {\n      const now = dayjs();\n      const expired = dayjs(this.transaction.payment.expiredAt);\n      const diff = now.diff(expired, \"seconds\");\n      if(diff < 0) {\n        this.configCountDown.leftTime = Math.abs(now.diff(expired, \"seconds\"));\n      }\n      else {\n        this.isExpired = true;\n        this.configCountDown.leftTime = 0;\n      }\n    }\n  }\n\n  copyToClipboard(value: string) {\n    this.clipboard.copy(value);\n    alert(\"Berhasil disalin!\");\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'failed-payment',\n  templateUrl: './failed-payment.component.html'\n})\nexport class FailedPaymentComponent {\n\n  @Input() type = '';\n\n  refresh() {\n    window.location.reload()\n  }\n\n  replacePaymentType() {\n    let paymentType = 'Metode Pembayaran';\n    if(this.type === 'QRIS') {\n      paymentType = 'Kode QR';\n    }\n    if(this.type === 'VA') {\n      paymentType = 'Nomor Virtual Account';\n    }\n    if(this.type === 'EWALLET') {\n      paymentType = 'Nomor Virtual Account';\n    }\n    return paymentType;\n  }\n\n}\n","<div class=\"p-6 width-full h-full flex flex-col items-center text-center justify-center\">\n  <img src=\"./assets/images/png/payment/icon-failed.png\" alt=\"failed-icon\" width=\"100px\" />\n  <h1 class=\"text-primary-yt-orange text-[20px] my-5\">\n    Mohon Maaf sedang ada peningkatan pengguna!\n  </h1>\n  <p class=\"text-[16px]\">\n    Halaman ini sedang banyak di akses pengguna lain. Refresh kembali halaman\n    untuk menampilkan {{ replacePaymentType() }}, agar kamu dapat melanjutkan\n    pembayaran.\n  </p>\n</div>\n<div class=\"absolute w-full left-0 bottom-0 p-4 shadow-bottom-shadow\">\n  <lib-basic-button title=\"Refresh\" width=\"w-full\" bColor=\"!bg-primary-yt-dark-blue\" (handleEmit)=\"refresh()\"></lib-basic-button>\n</div>\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { toDataURL, toCanvas, toString } from 'qrcode';\nimport * as i1 from '@angular/platform-browser';\n\nclass QRCodeComponent {\n    constructor(renderer, sanitizer) {\n        this.renderer = renderer;\n        this.sanitizer = sanitizer;\n        this.allowEmptyString = false;\n        this.colorDark = \"#000000ff\";\n        this.colorLight = \"#ffffffff\";\n        this.cssClass = \"qrcode\";\n        this.elementType = \"canvas\";\n        this.errorCorrectionLevel = \"M\";\n        this.margin = 4;\n        this.qrdata = \"\";\n        this.scale = 4;\n        this.width = 10;\n        this.qrCodeURL = new EventEmitter();\n        this.context = null;\n    }\n    async ngOnChanges() {\n        await this.createQRCode();\n    }\n    isValidQrCodeText(data) {\n        if (this.allowEmptyString === false) {\n            return !(typeof data === \"undefined\" ||\n                data === \"\" ||\n                data === \"null\" ||\n                data === null);\n        }\n        return !(typeof data === \"undefined\");\n    }\n    toDataURL(qrCodeConfig) {\n        return new Promise((resolve, reject) => {\n            toDataURL(this.qrdata, qrCodeConfig, (err, url) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(url);\n                }\n            });\n        });\n    }\n    toCanvas(canvas, qrCodeConfig) {\n        return new Promise((resolve, reject) => {\n            toCanvas(canvas, this.qrdata, qrCodeConfig, (error) => {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve(\"success\");\n                }\n            });\n        });\n    }\n    toSVG(qrCodeConfig) {\n        return new Promise((resolve, reject) => {\n            toString(this.qrdata, qrCodeConfig, (err, url) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(url);\n                }\n            });\n        });\n    }\n    renderElement(element) {\n        for (const node of this.qrcElement.nativeElement.childNodes) {\n            this.renderer.removeChild(this.qrcElement.nativeElement, node);\n        }\n        this.renderer.appendChild(this.qrcElement.nativeElement, element);\n    }\n    async createQRCode() {\n        if (this.version && this.version > 40) {\n            console.warn(\"[angularx-qrcode] max value for `version` is 40\");\n            this.version = 40;\n        }\n        else if (this.version && this.version < 1) {\n            console.warn(\"[angularx-qrcode]`min value for `version` is 1\");\n            this.version = 1;\n        }\n        else if (this.version !== undefined && isNaN(this.version)) {\n            console.warn(\"[angularx-qrcode] version should be a number, defaulting to auto.\");\n            this.version = undefined;\n        }\n        try {\n            if (!this.isValidQrCodeText(this.qrdata)) {\n                throw new Error(\"[angularx-qrcode] Field `qrdata` is empty, set 'allowEmptyString=\\\"true\\\"' to overwrite this behaviour.\");\n            }\n            if (this.isValidQrCodeText(this.qrdata) && this.qrdata === \"\") {\n                this.qrdata = \" \";\n            }\n            const config = {\n                color: {\n                    dark: this.colorDark,\n                    light: this.colorLight,\n                },\n                errorCorrectionLevel: this.errorCorrectionLevel,\n                margin: this.margin,\n                scale: this.scale,\n                version: this.version,\n                width: this.width,\n            };\n            const centerImageSrc = this.imageSrc;\n            const centerImageHeight = this.imageHeight || 40;\n            const centerImageWidth = this.imageWidth || 40;\n            switch (this.elementType) {\n                case \"canvas\":\n                    const canvasElement = this.renderer.createElement(\"canvas\");\n                    this.context = canvasElement.getContext(\"2d\");\n                    this.toCanvas(canvasElement, config)\n                        .then(() => {\n                        if (this.ariaLabel) {\n                            this.renderer.setAttribute(canvasElement, \"aria-label\", `${this.ariaLabel}`);\n                        }\n                        if (this.title) {\n                            this.renderer.setAttribute(canvasElement, \"title\", `${this.title}`);\n                        }\n                        if (centerImageSrc && this.context) {\n                            this.centerImage = new Image(centerImageWidth, centerImageHeight);\n                            if (centerImageSrc !== this.centerImage.src) {\n                                this.centerImage.src = centerImageSrc;\n                            }\n                            if (centerImageHeight !== this.centerImage.height) {\n                                this.centerImage.height = centerImageHeight;\n                            }\n                            if (centerImageWidth !== this.centerImage.width) {\n                                this.centerImage.width = centerImageWidth;\n                            }\n                            const centerImage = this.centerImage;\n                            if (centerImage) {\n                                centerImage.onload = () => {\n                                    this.context?.drawImage(centerImage, canvasElement.width / 2 - centerImageWidth / 2, canvasElement.height / 2 - centerImageHeight / 2, centerImageWidth, centerImageHeight);\n                                };\n                            }\n                        }\n                        this.renderElement(canvasElement);\n                        this.emitQRCodeURL(canvasElement);\n                    })\n                        .catch((e) => {\n                        console.error(\"[angularx-qrcode] canvas error:\", e);\n                    });\n                    break;\n                case \"svg\":\n                    const svgParentElement = this.renderer.createElement(\"div\");\n                    this.toSVG(config)\n                        .then((svgString) => {\n                        this.renderer.setProperty(svgParentElement, \"innerHTML\", svgString);\n                        const svgElement = svgParentElement.firstChild;\n                        this.renderer.setAttribute(svgElement, \"height\", `${this.width}`);\n                        this.renderer.setAttribute(svgElement, \"width\", `${this.width}`);\n                        this.renderElement(svgElement);\n                        this.emitQRCodeURL(svgElement);\n                    })\n                        .catch((e) => {\n                        console.error(\"[angularx-qrcode] svg error:\", e);\n                    });\n                    break;\n                case \"url\":\n                case \"img\":\n                default:\n                    const imgElement = this.renderer.createElement(\"img\");\n                    this.toDataURL(config)\n                        .then((dataUrl) => {\n                        if (this.alt) {\n                            imgElement.setAttribute(\"alt\", this.alt);\n                        }\n                        if (this.ariaLabel) {\n                            imgElement.setAttribute(\"aria-label\", this.ariaLabel);\n                        }\n                        imgElement.setAttribute(\"src\", dataUrl);\n                        if (this.title) {\n                            imgElement.setAttribute(\"title\", this.title);\n                        }\n                        this.renderElement(imgElement);\n                        this.emitQRCodeURL(imgElement);\n                    })\n                        .catch((e) => {\n                        console.error(\"[angularx-qrcode] img/url error:\", e);\n                    });\n            }\n        }\n        catch (e) {\n            console.error(\"[angularx-qrcode] Error generating QR Code:\", e.message);\n        }\n    }\n    emitQRCodeURL(element) {\n        const className = element.constructor.name;\n        if (className === SVGSVGElement.name) {\n            const svgHTML = element.outerHTML;\n            const blob = new Blob([svgHTML], { type: \"image/svg+xml\" });\n            const urlSvg = URL.createObjectURL(blob);\n            const urlSanitized = this.sanitizer.bypassSecurityTrustUrl(urlSvg);\n            this.qrCodeURL.emit(urlSanitized);\n            return;\n        }\n        let urlImage = \"\";\n        if (className === HTMLCanvasElement.name) {\n            urlImage = element.toDataURL(\"image/png\");\n        }\n        if (className === HTMLImageElement.name) {\n            urlImage = element.src;\n        }\n        fetch(urlImage)\n            .then((urlResponse) => urlResponse.blob())\n            .then((blob) => URL.createObjectURL(blob))\n            .then((url) => this.sanitizer.bypassSecurityTrustUrl(url))\n            .then((urlSanitized) => {\n            this.qrCodeURL.emit(urlSanitized);\n        })\n            .catch((error) => {\n            console.error(\"[angularx-qrcode] Error when fetching image/png URL: \" + error);\n        });\n    }\n}\nQRCodeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: QRCodeComponent, deps: [{ token: i0.Renderer2 }, { token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component });\nQRCodeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.0\", type: QRCodeComponent, selector: \"qrcode\", inputs: { allowEmptyString: \"allowEmptyString\", colorDark: \"colorDark\", colorLight: \"colorLight\", cssClass: \"cssClass\", elementType: \"elementType\", errorCorrectionLevel: \"errorCorrectionLevel\", imageSrc: \"imageSrc\", imageHeight: \"imageHeight\", imageWidth: \"imageWidth\", margin: \"margin\", qrdata: \"qrdata\", scale: \"scale\", version: \"version\", width: \"width\", alt: \"alt\", ariaLabel: \"ariaLabel\", title: \"title\" }, outputs: { qrCodeURL: \"qrCodeURL\" }, viewQueries: [{ propertyName: \"qrcElement\", first: true, predicate: [\"qrcElement\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: `<div #qrcElement [class]=\"cssClass\"></div>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: QRCodeComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: \"qrcode\",\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i1.DomSanitizer }]; }, propDecorators: { allowEmptyString: [{\n                type: Input\n            }], colorDark: [{\n                type: Input\n            }], colorLight: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], elementType: [{\n                type: Input\n            }], errorCorrectionLevel: [{\n                type: Input\n            }], imageSrc: [{\n                type: Input\n            }], imageHeight: [{\n                type: Input\n            }], imageWidth: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], qrdata: [{\n                type: Input\n            }], scale: [{\n                type: Input\n            }], version: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], alt: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], qrCodeURL: [{\n                type: Output\n            }], qrcElement: [{\n                type: ViewChild,\n                args: [\"qrcElement\", { static: true }]\n            }] } });\n\nclass QRCodeModule {\n}\nQRCodeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: QRCodeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQRCodeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: QRCodeModule, declarations: [QRCodeComponent], exports: [QRCodeComponent] });\nQRCodeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: QRCodeModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: QRCodeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [],\n                    declarations: [QRCodeComponent],\n                    exports: [QRCodeComponent],\n                }]\n        }] });\n\nexport { QRCodeComponent, QRCodeModule };\n","<div *ngIf=\"transaction\">\n  <div class=\"p-4 text-center flex flex-col bg-secondary-blue-light mb-3\">\n    <h3 class=\"text-[16px] font-light\">Selesaikan Pembayaran dalam</h3>\n    <h2 class=\"text-[18px] font-medium text-primary-yt-orange mb-2\">\n      <countdown [config]=\"configCountDown\"></countdown>\n    </h2>\n    <span class=\"text-[14px] font-light\">Batas Akhir Pembayaran</span>\n    <h3 class=\"text-[16px] font-bold\">\n      <span *ngIf=\"!isExpired\">\n        {{ transaction.payment.expiredAt | formatDate: 'DD MMM YYYY, HH:mm' }}\n      </span>\n      <span *ngIf=\"isExpired\">\n        Pembayaran Kadaluarsa\n      </span>\n    </h3>\n  </div>\n\n  <h3 class=\"text-[16px] text-center p-4\">\n    Menerima seluruh pembayaran yang mendukung QRIS\n  </h3>\n  <div class=\"h-[320px]\">\n    <div class=\"absolute w-full\">\n      <img\n        src=\"./assets/images/png/payment/qris-box.png\"\n        alt=\"qris\"\n        width=\"275px\"\n        class=\"m-auto\" />\n    </div>\n    <div class=\"absolute w-full mt-[110px]\">\n      <qrcode\n        [qrdata]=\"transaction.payment.paymentCode\"\n        [width]=\"180\"\n        (qrCodeURL)=\"onChangeURL($event)\"></qrcode>\n    </div>\n  </div>\n  <div class=\"flex flex-col mt-2 gap-y-4 pb-28 bg-white\">\n    <img\n      src=\"./assets/images/png/payment/qris.png\"\n      alt=\"qris\"\n      width=\"200px\"\n      class=\"m-auto\" />\n    <img\n      src=\"./assets/images/png/payment/qris-payment-method.png\"\n      alt=\"qris-payment-method\"\n      width=\"200px\"\n      class=\"m-auto\" />\n    <div class=\"mt-4 text-center\">\n      <a\n        [href]=\"qrCodeDownloadLink\"\n        download=\"qrcode\"\n        class=\"rounded-xl bg-primary-yt-orange text-white px-10 py-3\"\n        >Download Kode QR</a\n      >\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { SafeUrl } from \"@angular/platform-browser\";\nimport { SCMTransaction } from \"@youtap-web-lib\";\nimport * as dayjs from \"dayjs\";\n\n@Component({\n  selector: \"payment-qr-modal\",\n  templateUrl: \"./payment-qr-modal.component.html\"\n})\nexport class PaymentQrModalComponent implements OnInit {\n  @Input() transaction!: SCMTransaction;\n  configCountDown = {\n    leftTime: 0\n  };\n  isLoading = true;\n  qrCodeDownloadLink: SafeUrl = \"\";\n  isExpired = false;\n\n  ngOnInit(): void {\n    if (this.transaction) {\n      const now = dayjs();\n      const expired = dayjs(this.transaction.payment.expiredAt);\n      const diff = now.diff(expired, \"seconds\");\n      if(diff < 0) {\n        this.configCountDown.leftTime = Math.abs(now.diff(expired, \"seconds\"));\n      }\n      else {\n        this.isExpired = true;\n        this.configCountDown.leftTime = 0;\n      }\n    }\n  }\n\n  onChangeURL(url: SafeUrl) {\n    this.qrCodeDownloadLink = url;\n  }\n\n  downloadQR() {\n    window.location.href = this.qrCodeDownloadLink.toString();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'expired-payment',\n  templateUrl: './expired-payment.component.html'\n})\nexport class ExpiredPaymentComponent {\n  @Input() type = '';\n  @Input() paymentType = '';\n  @Output() action = new EventEmitter<string>();\n\n  constructor(private router: Router) {}\n\n  refresh() {\n    if (this.paymentType === 'PAY_ON_DELIVERY') {\n      this.handleAction();\n    } else {\n      if (this.type === 'SUBSCRIPTION') {\n        this.router.navigate(['/subscription/history']);\n      } else {\n        this.router.navigate(['/transaction']);\n      }\n    }\n  }\n\n  handleAction() {\n    this.action.emit();\n  }\n}\n","<div class=\"p-6 width-full h-full flex flex-col items-center text-center justify-center\">\n  <img src=\"./assets/images/png/payment/icon-expired.png\" alt=\"expired-icon\" width=\"100px\" />\n  <h1 class=\"text-primary-yt-orange text-[20px] my-5\">\n    Transaksimu Kadaluarsa!\n  </h1>\n  <p class=\"text-[16px]\">\n    Jangan khawatir, kamu dapat mengulang kembali halaman ini dan melanjutkan pembayaran.\n  </p>\n</div>\n<div class=\"absolute w-full left-0 bottom-0 p-4 shadow-bottom-shadow\">\n  <lib-basic-button title=\"Refresh\" width=\"w-full\" bColor=\"!bg-primary-yt-dark-blue\" (handleEmit)=\"refresh()\"></lib-basic-button>\n</div>\n","<div class=\"bg-grey-6\" *ngIf=\"transaction\">\n  <div class=\"p-4 text-center flex flex-col bg-secondary-blue-light\">\n    <h3 class=\"text-[16px] font-light\">Selesaikan Pembayaran dalam</h3>\n    <h2 class=\"text-[35px] font-bold text-primary-yt-blue mb-2\">\n      <countdown [config]=\"configCountDown\"></countdown>\n    </h2>\n    <span class=\"text-[14px] font-light\">Batas Akhir Pembayaran</span>\n    <h3 class=\"text-[16px] font-bold\">\n      <span *ngIf=\"!isExpired\">\n        {{ transaction.payment.expiredAt | formatDate: 'DD MMM YYYY, HH:mm' }}\n      </span>\n      <span *ngIf=\"isExpired\"> Pembayaran Kadaluarsa </span>\n    </h3>\n  </div>\n\n  <div class=\"p-4 flex flex-row justify-between mt-1 bg-white\">\n    <div class=\"flex flex-col\">\n      <div class=\"text-xs font-light\">Metode Pembayaran</div>\n      <span class=\"font-bold text-lg\">{{\n        transaction.payment.issuerName | uppercase\n      }}</span>\n    </div>\n    <div class=\"flex flex-col\">\n      <div class=\"text-xs font-light\">ID Transaksi</div>\n      <span class=\"font-bold text-lg\">{{\n        transaction.payment.transactionRefId\n      }}</span>\n    </div>\n  </div>\n\n  <div class=\"p-4 flex flex-row justify-between mt-1 bg-white items-center\">\n    <div class=\"flex flex-col\">\n      <div class=\"text-xs font-light\">Total Pembayaran</div>\n      <span class=\"font-bold text-lg\">\n        {{ transaction.total | libCurrency: true }}\n      </span>\n    </div>\n    <div class=\"flex flex-col\">\n      <lib-basic-button\n        title=\"Lihat Detail\"\n        [bColor]=\"'!bg-secondary-blue-light'\"\n        padding=\"!p-1\"\n        textSize=\"text-xs\"\n        textColor=\"text-primary-yt-blue\"\n        (handleEmit)=\"modalDetail = !modalDetail\"></lib-basic-button>\n    </div>\n  </div>\n\n  <div class=\"p-4 mt-1 bg-white items-center\">\n    <h2>\n      Cara Pembayaran melalui {{ transaction.payment.issuerName | uppercase }}\n    </h2>\n    <ul\n      class=\"text-xs font-light text-grey-3 list-disc pl-[14px] leading-5 marker:text-primary-yt-blue\">\n      <li>Klik Lanjutkan Pembayaran</li>\n      <li>\n        Kamu akan diminta membuka aplikasi\n        {{ transaction.payment.issuerName | uppercase }}\n      </li>\n      <li>\n        Periksa Kembali detail pembayaranmu di aplikasi\n        {{ transaction.payment.issuerName | uppercase }} dan tekan Bayar\n      </li>\n      <li>Transaksi telah selesai</li>\n    </ul>\n  </div>\n</div>\n\n<div class=\"fixed w-full max-w-[500px] bottom-0 shadow-bottom-shadow bg-white\">\n  <div class=\"p-4\">\n    <lib-basic-button\n      title=\"Lanjut Pembayaran\"\n      width=\"w-full\"\n      (handleEmit)=\"toPayment(transaction.payment.paymentCode)\"\n      *ngIf=\"!isExpired\"></lib-basic-button>\n    <div class=\"mt-3\" *ngIf=\"isCheckStatusManual\">\n      <lib-basic-button\n        title=\"Cek Status Pembayaran\"\n        [outlined]=\"true\"\n        [borderColor]=\"'blue'\"\n        width=\"w-full\"\n        [appBusyIf]=\"loadingCheckStatus\"\n        (handleEmit)=\"actionCheckStatus()\"></lib-basic-button>\n    </div>\n  </div>\n</div>\n\n<lib-bottom-modal [showModal]=\"modalDetail\" (closeOutsideModal)=\"modalDetail = !modalDetail\">\n  <ng-template #headerTemplate>\n    <div\n      class=\"flex flex-row justify-between items-center z-10 relative h-[5vh]\">\n      <span class=\"text-grey-1\">Detail Pembayaran</span>\n      <img\n        class=\"cursor-pointer\"\n        src=\"assets/images/svg/icon/times-icon.svg\"\n        alt=\"times-icon\"\n        (click)=\"modalDetail = false\" />\n    </div>\n  </ng-template>\n  <ng-template #bodyTemplate>\n    <div>\n      <div class=\"bg-white py-3 rounded-b-xl mb-3 border-t-[1px] border-grey-5\">\n        <h1 class=\"text-[18px] text-grey-1 mb-2\">Ringkasan Belanja</h1>\n        <div class=\"flex flex-row justify-between text-[14px] mb-2\">\n          <span class=\"text-grey-1\">Total Belanjaan</span>\n          <span class=\"text-primary-yt-blue\">{{\n            transaction.payment.transactionAmount | libCurrency: true\n          }}</span>\n        </div>\n        <div class=\"flex flex-row justify-between text-[14px] mb-2\">\n          <span class=\"text-grey-1\">Biaya Layanan</span>\n          <span class=\"text-primary-yt-blue\">{{\n            transaction.payment.paymentFee | libCurrency: true\n          }}</span>\n        </div>\n        <div class=\"flex flex-row justify-between text-[14px]\">\n          <span class=\"text-grey-1\">Total Pembayaran</span>\n          <span class=\"text-primary-yt-blue\">{{\n            transaction.total | libCurrency: true\n          }}</span>\n        </div>\n      </div>\n      <div class=\"py-3 border-y-[1px] border-grey-5 mb-4\">\n        <div class=\"flex flex-row justify-between text-[16px] font-bold\">\n          <span class=\"text-grey-1\">Total Pembayaran</span>\n          <span class=\"text-grey-1\">{{\n            transaction.total | libCurrency: true\n          }}</span>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</lib-bottom-modal>\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {\n  BOSPaymentService,\n  DetailPaymentInput,\n  PaymentStatusTypes,\n  SCMTransaction\n} from '@youtap-web-lib';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'payment-ewallet-modal',\n  templateUrl: './payment-ewallet-modal.component.html'\n})\nexport class PaymentEwalletModalComponent implements OnInit, OnDestroy {\n  @Input() transaction!: SCMTransaction;\n  showDetail = false;\n  configCountDown = {\n    leftTime: 0\n  };\n  isExpired = false;\n  modalDetail = false;\n  type = '';\n  intervalId!: any;\n  loadingCheckStatus = false;\n  isCheckStatusManual = false;\n\n  constructor(\n    private bosPaymentService: BOSPaymentService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.type = this.route.snapshot?.queryParamMap.get('type') ?? '';\n    const now = dayjs();\n    if (this.transaction) {\n      const expired = dayjs(this.transaction.payment.expiredAt);\n      const diff = now.diff(expired, 'seconds');\n      if (diff < 0) {\n        this.configCountDown.leftTime = Math.abs(now.diff(expired, 'seconds'));\n      } else {\n        this.isExpired = true;\n        this.configCountDown.leftTime = 0;\n      }\n    }\n    this.intervalId = setInterval(() => {\n      const expired = dayjs(this.transaction.payment.expiredAt);\n      const expiredAdd5Minutes = expired.add(5, \"minute\");\n      const is5Minutes = expiredAdd5Minutes.diff(now, 'minutes');\n      if (is5Minutes > 0) {\n        this.isCheckStatusManual = true;\n        clearInterval(this.intervalId);\n        return;\n      } else {\n        this.checkStatus(this.transaction.invoice);\n      }\n    }, 5000);\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n  }\n\n  toPayment(url: string) {\n    window.open(url, '_blank');\n  }\n\n  checkStatus(transactionRefId: string, typeCheck?: string) {\n    const data: DetailPaymentInput = {\n      detailPaymentInput: {\n        transactionRefId\n      }\n    };\n    this.bosPaymentService.detailPayment(data).subscribe({\n      next: ({data}) => {\n        if (data.detailPayment.paymentStatus === PaymentStatusTypes.SUCCESS) {\n          this.router.navigate(['/payment/paid'], {\n            queryParams: {\n              total: this.transaction.total,\n              type: this.type,\n              invoice: this.transaction.invoice\n            },\n            replaceUrl: true\n          });\n        }\n        if (typeCheck === 'manual' && data.detailPayment.paymentStatus === PaymentStatusTypes.AWAITING_PAYMENT) {\n          this.loadingCheckStatus = false;\n          alert('Belum terbayar');\n        }\n      },\n      error: () => {\n        if (typeCheck === 'manual') {\n          this.loadingCheckStatus = false;\n          alert('Belum terbayar');\n        }\n      }\n    });\n  }\n\n  actionCheckStatus() {\n    this.loadingCheckStatus = true;\n    this.checkStatus(this.transaction.invoice, 'manual');\n  }\n}\n","<div\n  *lib-skeleton=\"{\n    isLoading: isLoading,\n    width: '100%',\n    height: '100vh'\n  }\"\n  class=\"pt-3 bg-grey-6 h-screen relative\">\n  <div class=\"bg-white p-4 rounded-b-3xl mb-3 mt-3 pb-24\">\n    <div *ngFor=\"let list of listAvailablePayment\">\n      <div\n        *ngIf=\"list.name !== 'pay-on-delivery'\"\n        class=\"flex flex-col gap-y-3 mb-4\">\n        <h2 class=\"text-[16px] font-medium\">{{ list.displayName }}</h2>\n        <div\n          (click)=\"createTransaction(item, list.name, list)\"\n          *ngFor=\"let item of list.paymentMethods\">\n          <div\n            class=\"flex flex-row justify-between items-center shadow-default-shadow p-4 rounded-lg gap-x-3 cursor-pointer\">\n            <img\n              [src]=\"item.logo\"\n              [alt]=\"item.displayName\"\n              style=\"height: 19px\" />\n            <span class=\"text-[14px] grow\">{{\n              replacePaymentName(item.displayName)\n            }}</span>\n            <img\n              src=\"./assets/images/svg/arrow-right-grey.svg\"\n              alt=\"arrow-right\" />\n          </div>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          list.name === 'pay-on-delivery' && isPodAvailable === 'available'\n        \"\n        class=\"flex flex-col gap-y-3 mb-4\">\n        <div class=\"flex justify-between\">\n          <div class=\"flex items-center gap-1\">\n            <h2 class=\"text-[16px] font-medium\">{{ list.displayName }}</h2>\n            <lib-surface-badge\n              [color]=\"'blue'\"\n              [useBackground]=\"true\"\n              [label]=\"'Tersedia!'\"></lib-surface-badge>\n          </div>\n          <a\n            (click)=\"handleShowTnc()\"\n            class=\"text-primary-yt-blue text-[14px] cursor-pointer\"\n            >Pelajari</a\n          >\n        </div>\n        <div\n          (click)=\"createTransaction(item, list.name, list)\"\n          *ngFor=\"let item of list.paymentMethods\">\n          <div\n            class=\"flex flex-row justify-between items-center shadow-default-shadow p-4 rounded-lg gap-x-3 cursor-pointer\">\n            <img\n              [src]=\"item.logo\"\n              [alt]=\"item.displayName\"\n              style=\"height: 19px\" />\n            <span class=\"text-[14px] grow\">{{\n              replacePaymentName(item.displayName)\n            }}</span>\n            <img\n              src=\"./assets/images/svg/arrow-right-grey.svg\"\n              alt=\"arrow-right\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <button-footer>\n    <ng-template #footerButtonTemplate>\n      <div id=\"total-payment\">\n        <div class=\"text-grey-3 text-[14px] font-normal\">Total Pembayaran</div>\n        <div class=\"text-blue text-[20px] font-normal\">\n          {{ total | RoundFormatPipe | libCurrency : false }}\n        </div>\n      </div>\n    </ng-template>\n  </button-footer>\n</div>\n\n<div\n  *ngIf=\"va.modal\"\n  class=\"h-[100vh] w-full fixed overflow-y-auto top-0 left-0 z-10 bg-white\">\n  <div\n    class=\"flex flex-row justify-between items-center bg-primary-yt-blue p-4 fixed w-full left-0 top-0 z-10\">\n    <h1 class=\"text-[18px] text-white\">Virtual Account</h1>\n    <i\n      class=\"pi pi-times text-white cursor-pointer\"\n      (click)=\"handleClosed()\"></i>\n  </div>\n  <div class=\"mt-14\">\n    <div class=\"w-full mt-5 absolute\">\n      <lib-line-loading\n        *ngIf=\"modalStatus.loading && va.modal\"></lib-line-loading>\n    </div>\n    <div *ngIf=\"modalStatus.success && va.modal\">\n      <payment-va-modal\n        [transaction]=\"transaction\"\n        [paymentMethod]=\"paymentMethodSelected\"></payment-va-modal>\n      <div\n        class=\"fixed w-full max-w-[100%] bottom-0 shadow-bottom-shadow bg-white\">\n        <div class=\"p-4\">\n          <lib-basic-button\n            title=\"Cek Status Pembayaran\"\n            width=\"w-full\"\n            (handleEmit)=\"checkStatus(transaction.invoice)\"\n            [appBusyIf]=\"loadingCheckStatus\"\n            *ngIf=\"!isExpired\"></lib-basic-button>\n          <lib-basic-button\n            title=\"Ulangi Pembayaran\"\n            width=\"w-full\"\n            (handleEmit)=\"va.modal = false; retryOrToTransaction()\"\n            *ngIf=\"isExpired\"></lib-basic-button>\n        </div>\n      </div>\n    </div>\n    <failed-payment\n      *ngIf=\"modalStatus.failed && va.modal\"\n      [type]=\"'VA'\"></failed-payment>\n    <expired-payment\n      *ngIf=\"modalStatus.expired && va.modal\"\n      [type]=\"type\"\n      [paymentType]=\"paymentType\"\n      (action)=\"backToList()\"></expired-payment>\n    <div\n      *ngIf=\"modalStatus.unpaid\"\n      class=\"absolute bg-[#FF7272] text-white flex flex-row justify-center items-center text-center w-full left-0 top-0 mt-[58px] p-2 gap-x-2\">\n      <div\n        class=\"rounded-full px-1 pt-[2px] text-white bg-[#FC1010] w-[24px] h-[24px]\">\n        <i class=\"pi pi-times text-[14px]\"></i>\n      </div>\n      Pembayaran belum berhasil\n    </div>\n  </div>\n</div>\n\n<div\n  *ngIf=\"qris.modal\"\n  class=\"h-[100vh] w-full fixed overflow-y-auto top-0 left-0 z-10 bg-white\">\n  <div\n    class=\"flex flex-row justify-between items-center bg-primary-yt-blue p-4 fixed w-full left-0 top-0\">\n    <h1 class=\"text-[18px] text-white\">QRIS</h1>\n    <i\n      class=\"pi pi-times text-white cursor-pointer\"\n      (click)=\"handleClosed()\"></i>\n  </div>\n  <div class=\"mt-14\">\n    <div class=\"w-full mt-5 absolute\">\n      <lib-line-loading\n        *ngIf=\"modalStatus.loading && qris.modal\"></lib-line-loading>\n    </div>\n    <div *ngIf=\"modalStatus.success && qris.modal\">\n      <payment-qr-modal [transaction]=\"transaction\"></payment-qr-modal>\n      <div\n        class=\"fixed w-full max-w-[500px] bottom-0 shadow-bottom-shadow bg-white\">\n        <div class=\"p-4\">\n          <lib-basic-button\n            title=\"Cek Status Pembayaran\"\n            width=\"w-full\"\n            (handleEmit)=\"checkStatus(transaction.invoice)\"\n            [appBusyIf]=\"loadingCheckStatus\"\n            *ngIf=\"!isExpired\"></lib-basic-button>\n\n          <lib-basic-button\n            title=\"Ulangi Pembayaran\"\n            width=\"w-full\"\n            (handleEmit)=\"qris.modal = false; retryOrToTransaction()\"\n            *ngIf=\"isExpired\"></lib-basic-button>\n        </div>\n      </div>\n    </div>\n    <failed-payment\n      *ngIf=\"modalStatus.failed && qris.modal\"\n      [type]=\"'QRIS'\"></failed-payment>\n    <expired-payment\n      *ngIf=\"modalStatus.expired && qris.modal\"\n      [type]=\"type\"\n      [paymentType]=\"paymentType\"\n      (action)=\"backToList()\"></expired-payment>\n    <div\n      *ngIf=\"modalStatus.unpaid\"\n      class=\"absolute bg-[#FF7272] text-white flex flex-row justify-center items-center text-center w-full left-0 top-0 mt-[58px] p-2 gap-x-2\">\n      <div\n        class=\"rounded-full px-1 pt-[2px] text-white bg-[#FC1010] w-[24px] h-[24px]\">\n        <i class=\"pi pi-times text-[14px]\"></i>\n      </div>\n      Pembayaran belum berhasil\n    </div>\n  </div>\n</div>\n\n<div\n  *ngIf=\"eWallet.modal\"\n  class=\"h-[100vh] w-full fixed overflow-y-auto top-0 left-0 z-10 bg-white\">\n  <div\n    class=\"flex flex-row justify-between items-center bg-primary-yt-blue p-4 fixed w-full left-0 top-0\">\n    <h1 class=\"text-[18px] text-white\">Pembayaran Instan</h1>\n    <i\n      class=\"pi pi-times text-white cursor-pointer\"\n      (click)=\"handleClosed()\"></i>\n  </div>\n  <div class=\"mt-14\">\n    <div class=\"w-full mt-5 absolute\">\n      <lib-line-loading\n        *ngIf=\"modalStatus.loading && eWallet.modal\"></lib-line-loading>\n    </div>\n    <div *ngIf=\"modalStatus.success && eWallet.modal\">\n      <payment-ewallet-modal\n        [transaction]=\"transaction\"></payment-ewallet-modal>\n      <div\n        class=\"fixed w-full max-w-[500px] bottom-0 shadow-bottom-shadow bg-white\"\n        *ngIf=\"isExpired\">\n        <div class=\"p-4\">\n          <lib-basic-button\n            title=\"Ulangi Pembayaran\"\n            width=\"w-full\"\n            (handleEmit)=\"\n              eWallet.modal = false; retryOrToTransaction()\n            \"></lib-basic-button>\n        </div>\n      </div>\n    </div>\n    <failed-payment\n      *ngIf=\"modalStatus.failed && eWallet.modal\"\n      [type]=\"'QRIS'\"></failed-payment>\n    <expired-payment\n      *ngIf=\"modalStatus.expired && eWallet.modal\"\n      [type]=\"type\"\n      [paymentType]=\"paymentType\"\n      (action)=\"backToList()\"></expired-payment>\n    <div\n      *ngIf=\"modalStatus.unpaid\"\n      class=\"absolute bg-[#FF7272] text-white flex flex-row justify-center items-center text-center w-full left-0 top-0 mt-[58px] p-2 gap-x-2\">\n      <div\n        class=\"rounded-full px-1 pt-[2px] text-white bg-[#FC1010] w-[24px] h-[24px]\">\n        <i class=\"pi pi-times text-[14px]\"></i>\n      </div>\n      Pembayaran belum berhasil\n    </div>\n  </div>\n</div>\n\n<lib-bottom-modal [showModal]=\"pod.loadingModal\">\n  <ng-template #bodyTemplate>\n    <lib-line-loading></lib-line-loading>\n  </ng-template>\n</lib-bottom-modal>\n\n<lib-bottom-modal [showModal]=\"pod.successModal\">\n  <ng-template #bodyTemplate>\n    <img\n      src=\"./assets/images/png/payment/pod-success.png\"\n      width=\"210px\"\n      class=\"m-auto\" />\n    <h1 class=\"text-center py-4 px-6 font-medium\">\n      Kamu telah berhasil Belanja Kapan Aja di Belanja Stok. Pesanan Kamu sudah\n      di teruskan ke Supplier\n    </h1>\n  </ng-template>\n  <ng-template #footerTemplate>\n    <lib-basic-button\n      [title]=\"'Lihat status pesananmu'\"\n      [width]=\"'!w-full'\"\n      (handleEmit)=\"toListTransaction()\"></lib-basic-button>\n  </ng-template>\n</lib-bottom-modal>\n\n<pod-tnc-modal\n  [showModal]=\"showTncPOD\"\n  (closeModal)=\"showTncPOD = !showTncPOD\"></pod-tnc-modal>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BasicContainerComponent } from '../../shared/layout/container/basic-container/basic-container.component';\nimport { ListPaymentComponent } from './list-payment/list-payment.component';\nimport { PaidPaymentComponent } from './paid-payment/paid-payment.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BasicContainerComponent,\n    children: [\n      {\n        path: 'list',\n        component: ListPaymentComponent,\n        title: 'Bayar Dengan'\n      }\n    ]\n  },\n  {\n    path: 'paid',\n    component: PaidPaymentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentRoutingModule { }\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, OnInit } from '@angular/core';\nimport {\n  BOSCreateTransactionInput,\n  BOSPaymentService,\n  CreatePaymentInput,\n  CreateTransactionInput,\n  DetailPaymentInput,\n  DetailTransactionSupplierInput,\n  PaymentMethod,\n  PaymentMethodCategory,\n  PaymentMethodType,\n  PaymentService,\n  PaymentStatusTypes,\n  PaymentType,\n  ResponseDetailPayment,\n  RetryPaymentInput,\n  SCMTransaction,\n  SCMTransactionService,\n  TransactionService\n} from '@youtap-web-lib';\nimport {\n  PaymentData,\n  PaymentDataType\n} from '../../../shared/data/payment.data';\nimport * as dayjs from 'dayjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthData } from '../../../shared/data/auth.data';\nimport { Location } from '@angular/common';\nimport { SubscriptionData } from '../../../shared/data/subscription.data';\nimport { CountCartService } from '../../../shared/service/count-cart.service';\nimport { GaService } from '../../../shared/service/ga.service';\nimport { ReferralService } from '../../../shared/service/referral.service';\n\n@Component({\n  selector: 'list-payment',\n  templateUrl: './list-payment.component.html'\n})\nexport class ListPaymentComponent implements OnInit {\n  isLoading = true;\n  listAvailablePayment!: PaymentMethodCategory[];\n  paymentMethodSelected!: PaymentMethod;\n  total = 0;\n  transaction = {} as SCMTransaction;\n  va = {\n    modal: false\n  };\n  qris = {\n    modal: false\n  };\n  eWallet = {\n    modal: false\n  };\n  modalStatus = {\n    loading: false,\n    success: false,\n    failed: false,\n    expired: false,\n    unpaid: false\n  };\n  loadingCheckStatus = false;\n  detailPayment!: ResponseDetailPayment;\n  id = '';\n  invoice = '';\n  type = '';\n  paymentType = '';\n  transactionInvoice = '';\n  isPodAvailable = '';\n  isExpired = false;\n  isRetry = false;\n  pod = {\n    loadingModal: false,\n    successModal: false\n  };\n  showTncPOD = false;\n\n  constructor(\n    private paymentService: PaymentService,\n    private bosPaymentService: BOSPaymentService,\n    public paymentData: PaymentData,\n    private scmTransactionService: SCMTransactionService,\n    private transactionService: TransactionService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authData: AuthData,\n    private location: Location,\n    private subscriptionData: SubscriptionData,\n    private countCartService: CountCartService,\n    private gaService: GaService,\n    private referralService: ReferralService\n  ) {}\n\n  ngOnInit(): void {\n    this.getAvailablePayments();\n    this.total = this.paymentData.payment.total || 0;\n    this.id = this.route.snapshot?.queryParamMap.get('id') ?? '';\n    this.invoice = this.route.snapshot?.queryParamMap.get('invoice') ?? '';\n    this.type = this.route.snapshot?.queryParamMap.get('type') ?? '';\n    this.paymentType =\n      this.route.snapshot?.queryParamMap.get('paymentType') ?? '';\n    this.isPodAvailable = this.route.snapshot?.queryParamMap.get('pod') ?? '';\n\n    if (this.id) {\n      this.getDetailTransaction(this.id);\n    }\n    if (this.invoice) {\n      this.subsDetailPayment(this.invoice);\n    }\n  }\n\n  getAvailablePayments() {\n    this.isLoading = true;\n    this.paymentService.listAvailablePayment().subscribe({\n      next: ({ data }) => {\n        this.isLoading = false;\n        this.listAvailablePayment =\n          data.listAvailablePayment.paymentMethodCategories.filter((val) =>\n            this.total > 9999 ? val : val.name !== 'virtual_account'\n          );\n      },\n      error: (err) => {\n        err;\n      }\n    });\n  }\n\n  replacePaymentName(name: string) {\n    switch (name) {\n      case 'bca_va':\n        return 'BCA Virtual Account';\n      case 'mandiri_va':\n        return 'Mandiri Virtual Account';\n      case 'bri_va':\n        return 'BRI Virtual Account';\n      case 'bni_va':\n        return 'BNI Virtual Account';\n      case 'mpm':\n        return 'Scan QRIS';\n\n      default:\n        return name;\n    }\n  }\n\n  makePaymentExpired(expiredAt: string) {\n    setInterval(() => {\n      const now = dayjs();\n      const expired = dayjs(expiredAt);\n      const diff = expired.diff(now, 'seconds');\n      if (diff <= 0) {\n        this.modalStatus.success = false;\n        this.modalStatus.expired = true;\n      }\n    }, 1000);\n  }\n\n  createTransaction(\n    payment: PaymentMethod,\n    paymentMethodType: PaymentMethodType,\n    paymentMethodCategory: PaymentMethodCategory\n  ) {\n    this.addTracker(payment, paymentMethodCategory);\n    this.showModal(paymentMethodType);\n    this.paymentMethodSelected = payment;\n    this.modalStatus.loading = true;\n    this.modalStatus.success = false;\n    switch (this.paymentData.payment.type) {\n      case PaymentDataType.BTOK:\n        if (this.id && this.paymentType === PaymentType.PAY_ON_DELIVERY) {\n          if (this.isRetry) {\n            this.retryPayment(payment);\n          } else {\n            this.createPayment(payment);\n          }\n        } else {\n          this.createTransactionBTOK(payment);\n        }\n        break;\n      case PaymentDataType.SUBSCRIPTION:\n        this.createTransactionSubscription(payment);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  addTracker(\n    payment: PaymentMethod,\n    paymentMethodCategory: PaymentMethodCategory\n  ) {\n    switch (paymentMethodCategory.name) {\n      case 'virtual_account':\n        this.gaService.addEvent('Payment_select_virtual_account', 'Payment', '');\n        break;\n      case 'qr_code':\n        this.gaService.addEvent('Payment_select_qr_code', 'Payment', '');\n        break;\n      default:\n        break;\n    }\n    switch (payment.name) {\n      case 'bca_va':\n        this.gaService.addEvent('Payment_VA_BCA', 'Payment', '');\n        break;\n      case 'mandiri_va':\n        this.gaService.addEvent('Payment_VA_Mandiri', 'Payment', '');\n        break;\n      case 'bri_va':\n        this.gaService.addEvent('Payment_VA_BRI', 'Payment', '');\n        break;\n      case 'bni_va':\n        this.gaService.addEvent('Payment_VA_BNI', 'Payment', '');\n        break;\n      default:\n        break;\n    }\n  }\n\n  showModal(paymentMethodType: PaymentMethodType) {\n    switch (paymentMethodType) {\n      case PaymentMethodType.VA:\n        this.va.modal = true;\n        break;\n      case PaymentMethodType.QR:\n        this.qris.modal = true;\n        break;\n      case PaymentMethodType.POD:\n        this.pod.loadingModal = true;\n        break;\n      case PaymentMethodType.EWALLET:\n        this.eWallet.modal = true;\n        break;\n      default:\n        break;\n    }\n  }\n\n  createPayment(payment: PaymentMethod) {\n    this.transaction = {} as SCMTransaction;\n    const data = {\n      createPaymentInput: {\n        paymentMethod: payment.name,\n        transactionRefId: this.transactionInvoice,\n        transactionSupplierInvoice: this.invoice\n      }\n    } as CreatePaymentInput;\n    this.paymentService.createPayment(data).subscribe({\n      next: ({ data }: any) => {\n        this.modalStatus.loading = false;\n        this.modalStatus.success = true;\n        this.transaction.payment = data.createPayment;\n        this.transaction.total = data.createPayment.transactionAmount;\n        this.getDetailTransaction(this.id);\n      },\n      error: (err) => {\n        const [error] = err.graphQLErrors;\n        this.gaService.addEvent(error.extensions.code, 'payment', '');\n        if (error.extensions.code === 'OUT_OF_STOCK') {\n          this.location.back();\n        }\n        this.modalStatus.loading = false;\n        this.modalStatus.failed = true;\n      }\n    });\n  }\n\n  retryPayment(payment: PaymentMethod) {\n    this.transaction = {} as SCMTransaction;\n    const data = {\n      retryPaymentInput: {\n        paymentMethod: payment.name,\n        transactionRefId: this.transactionInvoice,\n        transactionSupplierInvoice: this.invoice\n      }\n    } as RetryPaymentInput;\n    this.paymentService.retryPayment(data).subscribe({\n      next: ({ data }: any) => {\n        this.transaction.payment = data.retryPayment;\n        this.transaction.total = data.retryPayment.transactionAmount;\n        setTimeout(() => {\n          this.modalStatus.loading = false;\n          this.modalStatus.success = true;\n        }, 500);\n        this.checkExpired();\n      },\n      error: (err) => {\n        const [error] = err.graphQLErrors;\n        this.gaService.addEvent(error.extensions.code, 'payment', '');\n        if (error.extensions.code === 'OUT_OF_STOCK') {\n          this.location.back();\n        }\n        this.modalStatus.loading = false;\n        this.modalStatus.failed = true;\n      }\n    });\n  }\n\n  createTransactionBTOK(payment: PaymentMethod) {\n    this.transaction = {} as SCMTransaction;\n    const data = {\n      createTransactionInput: {\n        couponCode: this.paymentData.payment.voucher,\n        paymentMethod: payment.name\n      }\n    } as CreateTransactionInput;\n    this.scmTransactionService.createTransaction(data).subscribe({\n      next: ({ data }: any) => {\n        this.countCartService.getCountCart();\n        this.modalStatus.loading = false;\n        this.modalStatus.success = true;\n        this.transaction = data.createTransaction;\n        if (payment.name === PaymentMethodType.POD) {\n          this.pod.successModal = true;\n        }\n        if (data) {\n          this.makePaymentExpired(this.transaction.payment.expiredAt);\n        }\n      },\n      error: (err) => {\n        const [error] = err.graphQLErrors;\n        this.gaService.addEvent(error.extensions.code, 'payment', '');\n        if (error.extensions.code === 'OUT_OF_STOCK') {\n          this.location.back();\n\n          // this.router.navigate([\"/cart/payment\"]);\n        }\n        this.modalStatus.loading = false;\n        this.modalStatus.failed = true;\n      }\n    });\n  }\n\n  createTransactionSubscription(payment: PaymentMethod) {\n    this.transaction = {} as SCMTransaction;\n    const plan = this.paymentData.paymentSubscriptionData.planOption.map(\n      (val) => {\n        const referral = val.referralCode;\n        if (referral) {\n          val.referralCode = referral;\n        }\n        return val;\n      }\n    );\n    const data = {\n      createTransactionInput: {\n        planOption: plan,\n        paymentMethod: payment.name,\n        couponCode: this.paymentData.payment.voucher\n      }\n    } as BOSCreateTransactionInput;\n    this.transactionService.createSubscriptionTransaction(data).subscribe({\n      next: ({ data }: any) => {\n        this.countCartService.getCountCart();\n        this.subscriptionData.removePlanCart();\n        this.modalStatus.loading = false;\n        this.modalStatus.success = true;\n        this.transaction = data.createSubscriptionTransaction;\n        if (data) {\n          this.makePaymentExpired(this.transaction.payment.expiredAt);\n        }\n        this.paymentData.paymentSubscriptionData.planOption.forEach((val) => {\n          this.referralService.useReferral(val.id);\n        });\n      },\n      error: () => {\n        this.modalStatus.loading = false;\n        this.modalStatus.failed = true;\n      }\n    });\n  }\n\n  checkStatus(transactionRefId: string) {\n    this.loadingCheckStatus = true;\n    const data: DetailPaymentInput = {\n      detailPaymentInput: {\n        transactionRefId: transactionRefId\n          ? transactionRefId\n          : this.transactionInvoice\n      }\n    };\n    this.bosPaymentService.detailPayment(data).subscribe({\n      next: ({ data }) => {\n        this.loadingCheckStatus = false;\n        if (\n          data.detailPayment.paymentStatus ===\n          PaymentStatusTypes.AWAITING_PAYMENT\n        ) {\n          this.modalStatus.unpaid = true;\n          setTimeout(() => {\n            this.modalStatus.unpaid = false;\n          }, 5000);\n        } else {\n          if(data.detailPayment.paymentType === 'VA') {\n            this.gaService.addEvent('Payment_successful_VA', 'Payment', '');\n          }\n          if(data.detailPayment.paymentType === 'QRIS') {\n            this.gaService.addEvent('Payment_successful_QRIS', 'Payment', '');\n          }\n\n          this.router.navigate(['/payment/paid'], {\n            queryParams: {\n              total: this.transaction.total,\n              type: this.type,\n              invoice: this.invoice\n            },\n            replaceUrl: true\n          });\n        }\n      },\n      error: () => {\n        this.modalStatus.loading = false;\n        this.modalStatus.failed = true;\n      }\n    });\n  }\n\n  subsDetailPayment(invoice: string) {\n    const data: DetailPaymentInput = {\n      detailPaymentInput: {\n        transactionRefId: invoice\n      }\n    };\n\n    this.bosPaymentService.detailPayment(data).subscribe({\n      next: ({ data }) => {\n        this.transaction = {\n          id: data.detailPayment.id,\n          status: data.detailPayment.paymentStatus,\n          invoice: data.detailPayment.transactionRefId,\n          payment: data.detailPayment,\n          updatedAt: data.detailPayment.expiredAt,\n          createdAt: data.detailPayment.expiredAt,\n          total: data.detailPayment.transactionAmount,\n          totalBeforeVoucher: data.detailPayment.transactionAmount,\n          userId: this.authData.location.userId\n            ? this.authData.location.userId\n            : '',\n          paymentStatus: data.detailPayment.paymentStatus\n        };\n        this.modalStatus = {\n          loading: false,\n          success: true,\n          failed: false,\n          expired: false,\n          unpaid: false\n        };\n        this.checkExpired();\n        const paymentType = data.detailPayment.paymentType;\n        if (paymentType === 'VA') {\n          this.va.modal = true;\n        } else if (paymentType === 'QRIS') {\n          this.qris.modal = true;\n        } else if (paymentType === 'E_WALLET') {\n          this.eWallet.modal = true;\n        }\n      }\n    });\n  }\n\n  getDetailTransaction(id: string) {\n    const data: DetailTransactionSupplierInput = {\n      id: id\n    };\n    this.scmTransactionService.detailTransactionSupplier(data).subscribe({\n      next: ({ data }) => {\n        this.invoice = data.detailTransactionSupplier.invoice;\n        this.transactionInvoice =\n          data.detailTransactionSupplier.transaction.invoice;\n        this.transaction = {\n          id: data.detailTransactionSupplier.id,\n          status: data.detailTransactionSupplier.status,\n          invoice: data.detailTransactionSupplier.transaction.invoice,\n          payment: data.detailTransactionSupplier.payment,\n          total: data.detailTransactionSupplier.transaction.total,\n          totalBeforeVoucher: data.detailTransactionSupplier.transaction.total,\n          updatedAt: data.detailTransactionSupplier.updatedAt,\n          createdAt: data.detailTransactionSupplier.updatedAt,\n          userId: this.authData.location.userId\n            ? this.authData.location.userId\n            : '',\n          paymentStatus: data.detailTransactionSupplier.payment?.paymentStatus\n        };\n        this.total = data.detailTransactionSupplier.transaction.total;\n        this.modalStatus = {\n          loading: false,\n          success: true,\n          failed: false,\n          expired: false,\n          unpaid: false\n        };\n        this.checkExpired();\n        if (data.detailTransactionSupplier.payment) {\n          if (data.detailTransactionSupplier.payment.paymentType === 'VA') {\n            this.va.modal = true;\n          } else if (\n            data.detailTransactionSupplier.payment.paymentType === 'QRIS'\n          ) {\n            this.qris.modal = true;\n          } else if (\n            data.detailTransactionSupplier.payment.paymentType === 'E_WALLET'\n          ) {\n            this.eWallet.modal = true;\n          }\n        }\n      },\n      error: (err) => {\n        return err;\n      }\n    });\n  }\n\n  checkExpired() {\n    if (this.transaction.payment) {\n      const now = dayjs();\n      const expired = dayjs(this.transaction.payment.expiredAt);\n      const diff = now.diff(expired, 'seconds');\n      if (diff > 0) {\n        this.isExpired = true;\n        this.modalStatus.success = false;\n        this.modalStatus.expired = true;\n      } else {\n        this.isExpired = false;\n      }\n    }\n  }\n\n  handleClosed() {\n    if (this.id) {\n      this.location.back();\n    } else if (this.paymentData.payment.type === 'SUBSCRIPTION') {\n      // if (this.invoice) {\n      //   this.location.back();\n      // } else {\n      //   this.location.back();\n      //   this.location.back();\n      // }\n      this.location.replaceState('/');\n      this.router.navigate(['/subscription/history']);\n    } else {\n      this.router.navigate(['/transaction']);\n    }\n  }\n\n  toListTransaction() {\n    this.router.navigate(['/transaction'], {});\n  }\n\n  handleShowTnc() {\n    this.showTncPOD = true;\n  }\n\n  retryOrToTransaction() {\n    if (this.paymentType === PaymentType.PAY_ON_DELIVERY) {\n      this.isRetry = true;\n    } else {\n      if (this.type === 'SUBSCRIPTION') {\n        this.router.navigate(['/subscription/history']);\n      } else {\n        this.toListTransaction();\n      }\n    }\n  }\n\n  backToList() {\n    this.modalStatus = {\n      expired: false,\n      failed: false,\n      loading: false,\n      success: false,\n      unpaid: false\n    };\n    this.va.modal = false;\n    this.qris.modal = false;\n    this.eWallet.modal = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {Location} from \"@angular/common\";\n\n@Component({\n  selector: 'paid-payment',\n  templateUrl: './paid-payment.component.html'\n})\nexport class PaidPaymentComponent implements OnInit {\n  total = 0;\n  type = '';\n  invoice = '';\n\n  constructor(private route: ActivatedRoute, private router: Router, private location: Location) {}\n\n  ngOnInit(): void {\n    this.total = parseInt(this.route.snapshot?.queryParamMap.get('total') ?? '0');\n    this.type = this.route.snapshot?.queryParamMap.get('type') ?? '';\n    this.invoice = this.route.snapshot?.queryParamMap.get('invoice') ?? '';\n  }\n\n  toTransaction() {\n    if (this.type === 'SUBSCRIPTION') {\n      this.location.replaceState('/');\n      this.router.navigate(['/subscription/history']);\n    } else {\n      this.router.navigate(['/transaction']);\n    }\n  }\n}\n","<div\n  class=\"px-6 w-full h-[100vh] flex flex-col items-center text-center justify-center\">\n  <img\n    src=\"./assets/images/png/payment/icon-success.png\"\n    alt=\"success-icon\"\n    width=\"100px\" />\n  <h1 class=\"text-primary-yt-blue text-[20px] my-5\">\n    Kamu Berhasil Melakukan Transaksi!\n  </h1>\n  <span class=\"text-[16px]\"> Total Pembayaran </span>\n  <h1 class=\"text-[20px]\">\n    {{ total | libCurrency : false }}\n  </h1>\n</div>\n<div class=\"fixed w-full shadow-bottom-shadow bottom-0 p-4 max-w-[500px]\">\n  <lib-basic-button\n    title=\"OK\"\n    width=\"w-full\"\n    (handleEmit)=\"toTransaction()\"></lib-basic-button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaymentRoutingModule } from './payment-routing.module';\nimport { ListPaymentComponent } from './list-payment/list-payment.component';\nimport { FooterModule } from '../../shared/layout/footer/footer.module';\nimport { PaymentVaModalComponent } from './payment-va-modal/payment-va-modal.component';\nimport {\n  BadgeModule,\n  ButtonModule,\n  DirectiveModule,\n  LoadingsModule,\n  ModalModule,\n  PipeModule\n} from '@youtap-web-lib';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { CountdownModule } from 'ngx-countdown';\nimport { TabViewModule } from 'primeng/tabview';\nimport { FailedPaymentComponent } from './failed-payment/failed-payment.component';\nimport { PaymentQrModalComponent } from './payment-qr-modal/payment-qr-modal.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { ExpiredPaymentComponent } from './expired-payment/expired-payment.component';\nimport { PaidPaymentComponent } from './paid-payment/paid-payment.component';\nimport { ModalModule as PodModal } from '../modal/modal.module';\nimport { PaymentEwalletModalComponent } from './payment-ewallet-modal/payment-ewallet-modal.component';\n\n@NgModule({\n  declarations: [\n    ListPaymentComponent,\n    PaymentVaModalComponent,\n    FailedPaymentComponent,\n    PaymentQrModalComponent,\n    ExpiredPaymentComponent,\n    PaidPaymentComponent,\n    PaymentEwalletModalComponent\n  ],\n  imports: [\n    CommonModule,\n    PaymentRoutingModule,\n    DirectiveModule,\n    FooterModule,\n    PipeModule,\n    ButtonModule,\n    ClipboardModule,\n    CountdownModule,\n    TabViewModule,\n    LoadingsModule,\n    QRCodeModule,\n    BadgeModule,\n    ModalModule,\n    PodModal\n  ]\n})\nexport class PaymentModule {}\n","import {isPlatformBrowser} from '@angular/common';\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\n\nexport enum PaymentDataType {\n  BTOK = 'BTOK',\n  SUBSCRIPTION = 'SUBSCRIPTION'\n}\n\ninterface PaymentDataDto {\n  total: number;\n  type: PaymentDataType;\n  voucher: string;\n}\n\ninterface PaymentSubscriptionDto {\n  planOption: PlanOptionId[];\n}\n\ninterface PlanOptionId {\n  id: string;\n  referralCode?: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentData {\n  isReady = false;\n  paymentData!: PaymentDataDto;\n  paymentSubscriptionData!: PaymentSubscriptionDto;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: object) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isReady = true;\n    }\n  }\n\n  /** PAYMENT */\n  set payment(data: PaymentDataDto) {\n    this.paymentData = data;\n    if (this.isReady) {\n      localStorage.setItem('paymentData', JSON.stringify(data));\n    }\n  }\n\n  get payment(): PaymentDataDto {\n    if (this.isReady) {\n      const local = localStorage.getItem('paymentData');\n      if (local) {\n        const paymentData: PaymentDataDto = JSON.parse(local) as PaymentDataDto;\n        return paymentData;\n      } else {\n        return {} as PaymentDataDto;\n      }\n    } else {\n      return {} as PaymentDataDto;\n    }\n  }\n\n  /** PAYMENT SUBSCRIPTION */\n  set paymentSubscription(data: PaymentSubscriptionDto) {\n    this.paymentSubscriptionData = data;\n    if (this.isReady) {\n      localStorage.setItem('paymentSubscriptionData', JSON.stringify(data));\n    }\n  }\n\n  get paymentSubscription(): PaymentSubscriptionDto {\n    if (this.isReady) {\n      const local = localStorage.getItem('paymentSubscriptionData');\n      if (local) {\n        const paymentSubscriptionData: PaymentSubscriptionDto = JSON.parse(\n          local\n        ) as PaymentSubscriptionDto;\n        return paymentSubscriptionData;\n      } else {\n        return {} as PaymentSubscriptionDto;\n      }\n    } else {\n      return {} as PaymentSubscriptionDto;\n    }\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PlanOption } from '@youtap-web-lib';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubscriptionData {\n  isReady = false;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: object) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isReady = true;\n    }\n  }\n\n  addPlanCart(data: PlanOption) {\n\n    if (this.isReady) {\n      const existing = JSON.parse(\n        localStorage.getItem('data_plan_cart') as string\n      );\n\n      let plan: PlanOption[] = existing ? existing : [];\n      plan = [data];\n      localStorage.setItem('data_plan_cart', JSON.stringify(plan));\n    }\n  }\n\n  removePlanCart() {\n    if (this.isReady) {\n      localStorage.removeItem('data_plan_cart');\n    }\n  }\n\n  changePlanCart(data: PlanOption) {\n    if (this.isReady) {\n      const existing = JSON.parse(\n        localStorage.getItem('data_plan_cart') as string\n      ) as PlanOption[];\n      const plan: PlanOption[] = existing ? existing : [];\n      const index = existing.findIndex((val) => val.plan.id === data.plan.id);\n      plan[index] = data;\n      localStorage.setItem('data_plan_cart', JSON.stringify(plan));\n    }\n  }\n\n  get getPlanCart(): PlanOption[] {\n    if (this.isReady) {\n      const plan: PlanOption[] = JSON.parse(\n        localStorage.getItem('data_plan_cart') as string\n      );\n\n      return plan;\n    } else {\n      return [];\n    }\n  }\n}\n","import { Component, ContentChild, Input } from '@angular/core';\n\n@Component({\n  selector: 'button-footer',\n  template: `\n    <div\n      [ngStyle]=\"{ display: isDisplay && 'none' }\"\n      class=\"fixed !w-[100%] bg-white px-[20px] pt-[20px] pb-[30px] rounded-t-3xl bottom-0 shadow-top-shadow max-w-[500px]\"\n      [ngClass]=\"margin\">\n      <ng-container *ngTemplateOutlet=\"footerButtonTemplate\"></ng-container>\n    </div>\n  `\n})\nexport class ButtonFooterComponent {\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  @ContentChild('footerButtonTemplate') footerButtonTemplate: any;\n  @Input() isDisplay = false;\n  @Input() margin = 'm-0';\n}\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","'use strict'\n\nmodule.exports = function encodeUtf8 (input) {\n  var result = []\n  var size = input.length\n\n  for (var index = 0; index < size; index++) {\n    var point = input.charCodeAt(index)\n\n    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n      var second = input.charCodeAt(index + 1)\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n        index += 1\n      }\n    }\n\n    // US-ASCII\n    if (point < 0x80) {\n      result.push(point)\n      continue\n    }\n\n    // 2-byte UTF-8\n    if (point < 0x800) {\n      result.push((point >> 6) | 192)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 3-byte UTF-8\n    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n      result.push((point >> 12) | 224)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 4-byte UTF-8\n    if (point >= 0x10000 && point <= 0x10FFFF) {\n      result.push((point >> 18) | 240)\n      result.push(((point >> 12) & 63) | 128)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // Invalid character\n    result.push(0xEF, 0xBF, 0xBD)\n  }\n\n  return new Uint8Array(result).buffer\n}\n","\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","const encodeUtf8 = require('encode-utf8')\nconst Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    data = encodeUtf8(data)\n  }\n  this.data = new Uint8Array(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n","const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a re-layout. This re-layout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * re-layout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        // Making the textarea `readonly` prevents the screen from jumping on iOS Safari (see #25169).\n        textarea.readOnly = true;\n        // The element needs to be inserted into the fullscreen container, if the page\n        // is in fullscreen mode, otherwise the browser won't execute the copy command.\n        (this._document.fullscreenElement || this._document.body).appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Clipboard, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkCopyToClipboard, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                }] }], propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\nclass ClipboardModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: ClipboardModule, declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ClipboardModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n","import * as i0 from '@angular/core';\nimport { forwardRef, Component, Inject, Input, ContentChildren, EventEmitter, PLATFORM_ID, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i2 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronRightIcon } from 'primeng/icons/chevronright';\nimport { ChevronLeftIcon } from 'primeng/icons/chevronleft';\n\nlet idx = 0;\nclass TabPanel {\n    constructor(tabView, viewContainer, cd) {\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.cache = true;\n        this.tooltipPosition = 'top';\n        this.tooltipPositionStyle = 'absolute';\n        this.id = `p-tabpanel-${idx++}`;\n        this.tabView = tabView;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                case 'righticon':\n                    this.rightIconTemplate = item.template;\n                    break;\n                case 'lefticon':\n                    this.leftIconTemplate = item.template;\n                    break;\n                case 'closeicon':\n                    this.closeIconTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(val) {\n        this._selected = val;\n        if (!this.loaded) {\n            this.cd.detectChanges();\n        }\n        if (val)\n            this.loaded = true;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        this._disabled = disabled;\n        this.tabView.cd.markForCheck();\n    }\n    get header() {\n        return this._header;\n    }\n    set header(header) {\n        this._header = header;\n        // We have to wait for the rendering and then retrieve the actual size element from the DOM.\n        // in future `Promise.resolve` can be changed to `queueMicrotask` (if ie11 support will be dropped)\n        Promise.resolve().then(() => {\n            this.tabView.updateInkBar();\n            this.tabView.cd.markForCheck();\n        });\n    }\n    get leftIcon() {\n        return this._leftIcon;\n    }\n    set leftIcon(leftIcon) {\n        this._leftIcon = leftIcon;\n        this.tabView.cd.markForCheck();\n    }\n    get rightIcon() {\n        return this._rightIcon;\n    }\n    set rightIcon(rightIcon) {\n        this._rightIcon = rightIcon;\n        this.tabView.cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.view = null;\n    }\n}\nTabPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabPanel, deps: [{ token: forwardRef(() => TabView) }, { token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTabPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: TabPanel, selector: \"p-tabPanel\", inputs: { closable: \"closable\", headerStyle: \"headerStyle\", headerStyleClass: \"headerStyleClass\", cache: \"cache\", tooltip: \"tooltip\", tooltipPosition: \"tooltipPosition\", tooltipPositionStyle: \"tooltipPositionStyle\", tooltipStyleClass: \"tooltipStyleClass\", selected: \"selected\", disabled: \"disabled\", header: \"header\", leftIcon: \"leftIcon\", rightIcon: \"rightIcon\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\" role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tabPanel',\n                    template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\" role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => TabView)]\n                }] }, { type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { closable: [{\n                type: Input\n            }], headerStyle: [{\n                type: Input\n            }], headerStyleClass: [{\n                type: Input\n            }], cache: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], tooltipPositionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], leftIcon: [{\n                type: Input\n            }], rightIcon: [{\n                type: Input\n            }] } });\nclass TabView {\n    constructor(platformId, el, cd) {\n        this.platformId = platformId;\n        this.el = el;\n        this.cd = cd;\n        this.orientation = 'top';\n        this.onChange = new EventEmitter();\n        this.onClose = new EventEmitter();\n        this.activeIndexChange = new EventEmitter();\n        this.backwardIsDisabled = true;\n        this.forwardIsDisabled = false;\n    }\n    ngAfterContentInit() {\n        this.initTabs();\n        this.tabChangesSubscription = this.tabPanels.changes.subscribe((_) => {\n            this.initTabs();\n        });\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'previousicon':\n                    this.previousIconTemplate = item.template;\n                    break;\n                case 'nexticon':\n                    this.nextIconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngAfterViewChecked() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.tabChanged) {\n                this.updateInkBar();\n                this.tabChanged = false;\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.tabChangesSubscription) {\n            this.tabChangesSubscription.unsubscribe();\n        }\n    }\n    initTabs() {\n        this.tabs = this.tabPanels.toArray();\n        let selectedTab = this.findSelectedTab();\n        if (!selectedTab && this.tabs.length) {\n            if (this.activeIndex != null && this.tabs.length > this.activeIndex)\n                this.tabs[this.activeIndex].selected = true;\n            else\n                this.tabs[0].selected = true;\n            this.tabChanged = true;\n        }\n        this.cd.markForCheck();\n    }\n    open(event, tab) {\n        if (tab.disabled) {\n            if (event) {\n                event.preventDefault();\n            }\n            return;\n        }\n        if (!tab.selected) {\n            let selectedTab = this.findSelectedTab();\n            if (selectedTab) {\n                selectedTab.selected = false;\n            }\n            this.tabChanged = true;\n            tab.selected = true;\n            let selectedTabIndex = this.findTabIndex(tab);\n            this.preventActiveIndexPropagation = true;\n            this.activeIndexChange.emit(selectedTabIndex);\n            this.onChange.emit({ originalEvent: event, index: selectedTabIndex });\n            this.updateScrollBar(selectedTabIndex);\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n    close(event, tab) {\n        if (this.controlClose) {\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab),\n                close: () => {\n                    this.closeTab(tab);\n                }\n            });\n        }\n        else {\n            this.closeTab(tab);\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab)\n            });\n        }\n    }\n    closeTab(tab) {\n        if (tab.disabled) {\n            return;\n        }\n        if (tab.selected) {\n            this.tabChanged = true;\n            tab.selected = false;\n            for (let i = 0; i < this.tabs.length; i++) {\n                let tabPanel = this.tabs[i];\n                if (!tabPanel.closed && !tab.disabled) {\n                    tabPanel.selected = true;\n                    break;\n                }\n            }\n        }\n        tab.closed = true;\n    }\n    findSelectedTab() {\n        for (let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i].selected) {\n                return this.tabs[i];\n            }\n        }\n        return null;\n    }\n    findTabIndex(tab) {\n        let index = -1;\n        for (let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i] == tab) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    get activeIndex() {\n        return this._activeIndex;\n    }\n    set activeIndex(val) {\n        this._activeIndex = val;\n        if (this.preventActiveIndexPropagation) {\n            this.preventActiveIndexPropagation = false;\n            return;\n        }\n        if (this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\n            this.findSelectedTab().selected = false;\n            this.tabs[this._activeIndex].selected = true;\n            this.tabChanged = true;\n            this.updateScrollBar(val);\n        }\n    }\n    updateInkBar() {\n        if (this.navbar) {\n            const tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n            if (!tabHeader) {\n                return;\n            }\n            this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n            this.inkbar.nativeElement.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n        }\n    }\n    updateScrollBar(index) {\n        let tabHeader = this.navbar.nativeElement.children[index];\n        tabHeader.scrollIntoView({ block: 'nearest' });\n    }\n    updateButtonState() {\n        const content = this.content.nativeElement;\n        const { scrollLeft, scrollWidth } = content;\n        const width = DomHandler.getWidth(content);\n        this.backwardIsDisabled = scrollLeft === 0;\n        this.forwardIsDisabled = parseInt(scrollLeft) === scrollWidth - width;\n    }\n    onScroll(event) {\n        this.scrollable && this.updateButtonState();\n        event.preventDefault();\n    }\n    getVisibleButtonWidths() {\n        return [this.prevBtn?.nativeElement, this.nextBtn?.nativeElement].reduce((acc, el) => (el ? acc + DomHandler.getWidth(el) : acc), 0);\n    }\n    navBackward() {\n        const content = this.content.nativeElement;\n        const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n        const pos = content.scrollLeft - width;\n        content.scrollLeft = pos <= 0 ? 0 : pos;\n    }\n    navForward() {\n        const content = this.content.nativeElement;\n        const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n        const pos = content.scrollLeft + width;\n        const lastPos = content.scrollWidth - width;\n        content.scrollLeft = pos >= lastPos ? lastPos : pos;\n    }\n}\nTabView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabView, deps: [{ token: PLATFORM_ID }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTabView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: TabView, selector: \"p-tabView\", inputs: { orientation: \"orientation\", style: \"style\", styleClass: \"styleClass\", controlClose: \"controlClose\", scrollable: \"scrollable\", activeIndex: \"activeIndex\" }, outputs: { onChange: \"onChange\", onClose: \"onClose\", activeIndexChange: \"activeIndexChange\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"tabPanels\", predicate: TabPanel }, { propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"content\", first: true, predicate: [\"content\"], descendants: true }, { propertyName: \"navbar\", first: true, predicate: [\"navbar\"], descendants: true }, { propertyName: \"prevBtn\", first: true, predicate: [\"prevBtn\"], descendants: true }, { propertyName: \"nextBtn\", first: true, predicate: [\"nextBtn\"], descendants: true }, { propertyName: \"inkbar\", first: true, predicate: [\"inkbar\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"{ 'p-tabview p-component': true, 'p-tabview-scrollable': scrollable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-tabview-nav-container\">\n                <button *ngIf=\"scrollable && !backwardIsDisabled\" #prevBtn class=\"p-tabview-nav-prev p-tabview-nav-btn p-link\" (click)=\"navBackward()\" type=\"button\" pRipple>\n                    <ChevronLeftIcon *ngIf=\"!previousIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"previousIconTemplate\"></ng-template>\n                </button>\n                <div #content class=\"p-tabview-nav-content\" (scroll)=\"onScroll($event)\">\n                    <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                        <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                            <li role=\"presentation\" [ngClass]=\"{ 'p-highlight': tab.selected, 'p-disabled': tab.disabled }\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                                <a\n                                    role=\"tab\"\n                                    class=\"p-tabview-nav-link\"\n                                    [attr.id]=\"tab.id + '-label'\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [attr.aria-controls]=\"tab.id\"\n                                    [pTooltip]=\"tab.tooltip\"\n                                    [tooltipPosition]=\"tab.tooltipPosition\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [positionStyle]=\"tab.tooltipPositionStyle\"\n                                    [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                                    (click)=\"open($event, tab)\"\n                                    (keydown.enter)=\"open($event, tab)\"\n                                    pRipple\n                                    [attr.tabindex]=\"tab.disabled ? null : '0'\"\n                                >\n                                    <ng-container *ngIf=\"!tab.headerTemplate\">\n                                        <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon && !tab.leftIconTemplate\"></span>\n                                        <span *ngIf=\"tab.leftIconTemplate\" class=\"p-tabview-left-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.leftIconTemplate\"></ng-template>\n                                        </span>\n                                        <span class=\"p-tabview-title\">{{ tab.header }}</span>\n                                        <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon && !tab.rightIconTemplate\"></span>\n                                        <span *ngIf=\"tab.rightIconTemplate\" class=\"p-tabview-right-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.rightIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                    <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                                    <ng-container *ngIf=\"tab.closable\">\n                                        <TimesIcon *ngIf=\"!tab.closeIconTemplate\" [styleClass]=\"'p-tabview-close'\" (click)=\"close($event, tab)\"/>\n                                        <span class=\"tab.closeIconTemplate\" *ngIf=\"p-tabview-close\"></span>\n                                        <ng-template *ngTemplateOutlet=\"tab.closeIconTemplate\"></ng-template>\n                                    </ng-container>\n                                </a>\n                            </li>\n                        </ng-template>\n                        <li #inkbar class=\"p-tabview-ink-bar\"></li>\n                    </ul>\n                </div>\n                <button *ngIf=\"scrollable && !forwardIsDisabled\" #nextBtn class=\"p-tabview-nav-next p-tabview-nav-btn p-link\" (click)=\"navForward()\" type=\"button\" pRipple>\n                    <ChevronRightIcon *ngIf=\"!nextIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"nextIconTemplate\"></ng-template>\n                </button>\n            </div>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-tabview-nav-container{position:relative}.p-tabview-scrollable .p-tabview-nav-container{overflow:hidden}.p-tabview-nav-content{overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth;scrollbar-width:none;overscroll-behavior:contain auto}.p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex:1 1 auto}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1;white-space:nowrap}.p-tabview-nav-btn{position:absolute;top:0;z-index:2;height:100%;display:flex;align-items:center;justify-content:center}.p-tabview-nav-prev{left:0}.p-tabview-nav-next{right:0}.p-tabview-nav-content::-webkit-scrollbar{display:none}.p-tabview-close{z-index:1}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.Tooltip; }), selector: \"[pTooltip]\", inputs: [\"tooltipPosition\", \"tooltipEvent\", \"appendTo\", \"positionStyle\", \"tooltipStyleClass\", \"tooltipZIndex\", \"escape\", \"showDelay\", \"hideDelay\", \"life\", \"positionTop\", \"positionLeft\", \"autoHide\", \"fitContent\", \"hideOnEscape\", \"pTooltip\", \"tooltipDisabled\", \"tooltipOptions\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i3.Ripple; }), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(function () { return TimesIcon; }), selector: \"TimesIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronLeftIcon; }), selector: \"ChevronLeftIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronRightIcon; }), selector: \"ChevronRightIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabView, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-tabView', template: `\n        <div [ngClass]=\"{ 'p-tabview p-component': true, 'p-tabview-scrollable': scrollable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-tabview-nav-container\">\n                <button *ngIf=\"scrollable && !backwardIsDisabled\" #prevBtn class=\"p-tabview-nav-prev p-tabview-nav-btn p-link\" (click)=\"navBackward()\" type=\"button\" pRipple>\n                    <ChevronLeftIcon *ngIf=\"!previousIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"previousIconTemplate\"></ng-template>\n                </button>\n                <div #content class=\"p-tabview-nav-content\" (scroll)=\"onScroll($event)\">\n                    <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                        <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                            <li role=\"presentation\" [ngClass]=\"{ 'p-highlight': tab.selected, 'p-disabled': tab.disabled }\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                                <a\n                                    role=\"tab\"\n                                    class=\"p-tabview-nav-link\"\n                                    [attr.id]=\"tab.id + '-label'\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [attr.aria-controls]=\"tab.id\"\n                                    [pTooltip]=\"tab.tooltip\"\n                                    [tooltipPosition]=\"tab.tooltipPosition\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [positionStyle]=\"tab.tooltipPositionStyle\"\n                                    [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                                    (click)=\"open($event, tab)\"\n                                    (keydown.enter)=\"open($event, tab)\"\n                                    pRipple\n                                    [attr.tabindex]=\"tab.disabled ? null : '0'\"\n                                >\n                                    <ng-container *ngIf=\"!tab.headerTemplate\">\n                                        <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon && !tab.leftIconTemplate\"></span>\n                                        <span *ngIf=\"tab.leftIconTemplate\" class=\"p-tabview-left-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.leftIconTemplate\"></ng-template>\n                                        </span>\n                                        <span class=\"p-tabview-title\">{{ tab.header }}</span>\n                                        <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon && !tab.rightIconTemplate\"></span>\n                                        <span *ngIf=\"tab.rightIconTemplate\" class=\"p-tabview-right-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.rightIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                    <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                                    <ng-container *ngIf=\"tab.closable\">\n                                        <TimesIcon *ngIf=\"!tab.closeIconTemplate\" [styleClass]=\"'p-tabview-close'\" (click)=\"close($event, tab)\"/>\n                                        <span class=\"tab.closeIconTemplate\" *ngIf=\"p-tabview-close\"></span>\n                                        <ng-template *ngTemplateOutlet=\"tab.closeIconTemplate\"></ng-template>\n                                    </ng-container>\n                                </a>\n                            </li>\n                        </ng-template>\n                        <li #inkbar class=\"p-tabview-ink-bar\"></li>\n                    </ul>\n                </div>\n                <button *ngIf=\"scrollable && !forwardIsDisabled\" #nextBtn class=\"p-tabview-nav-next p-tabview-nav-btn p-link\" (click)=\"navForward()\" type=\"button\" pRipple>\n                    <ChevronRightIcon *ngIf=\"!nextIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"nextIconTemplate\"></ng-template>\n                </button>\n            </div>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-tabview-nav-container{position:relative}.p-tabview-scrollable .p-tabview-nav-container{overflow:hidden}.p-tabview-nav-content{overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth;scrollbar-width:none;overscroll-behavior:contain auto}.p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex:1 1 auto}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1;white-space:nowrap}.p-tabview-nav-btn{position:absolute;top:0;z-index:2;height:100%;display:flex;align-items:center;justify-content:center}.p-tabview-nav-prev{left:0}.p-tabview-nav-next{right:0}.p-tabview-nav-content::-webkit-scrollbar{display:none}.p-tabview-close{z-index:1}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { orientation: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], controlClose: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], content: [{\n                type: ViewChild,\n                args: ['content']\n            }], navbar: [{\n                type: ViewChild,\n                args: ['navbar']\n            }], prevBtn: [{\n                type: ViewChild,\n                args: ['prevBtn']\n            }], nextBtn: [{\n                type: ViewChild,\n                args: ['nextBtn']\n            }], inkbar: [{\n                type: ViewChild,\n                args: ['inkbar']\n            }], tabPanels: [{\n                type: ContentChildren,\n                args: [TabPanel]\n            }], onChange: [{\n                type: Output\n            }], onClose: [{\n                type: Output\n            }], activeIndexChange: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], activeIndex: [{\n                type: Input\n            }] } });\nclass TabViewModule {\n}\nTabViewModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTabViewModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, declarations: [TabView, TabPanel], imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon], exports: [TabView, TabPanel, SharedModule] });\nTabViewModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon, SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon],\n                    exports: [TabView, TabPanel, SharedModule],\n                    declarations: [TabView, TabPanel]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TabPanel, TabView, TabViewModule };\n//# sourceMappingURL=primeng-tabview.mjs.map\n","import { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Directive, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ZIndexUtils } from 'primeng/utils';\nimport * as i1 from 'primeng/api';\n\nclass Tooltip {\n    constructor(platformId, el, zone, config, renderer, changeDetector) {\n        this.platformId = platformId;\n        this.el = el;\n        this.zone = zone;\n        this.config = config;\n        this.renderer = renderer;\n        this.changeDetector = changeDetector;\n        this.escape = true;\n        this.autoHide = true;\n        this.fitContent = true;\n        this.hideOnEscape = true;\n        this._tooltipOptions = {\n            tooltipPosition: 'right',\n            tooltipEvent: 'hover',\n            appendTo: 'body',\n            tooltipZIndex: 'auto',\n            escape: true,\n            positionTop: 0,\n            positionLeft: 0,\n            autoHide: true,\n            hideOnEscape: false\n        };\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(val) {\n        this._disabled = val;\n        this.deactivate();\n    }\n    ngAfterViewInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.zone.runOutsideAngular(() => {\n                if (this.getOption('tooltipEvent') === 'hover') {\n                    this.mouseEnterListener = this.onMouseEnter.bind(this);\n                    this.mouseLeaveListener = this.onMouseLeave.bind(this);\n                    this.clickListener = this.onInputClick.bind(this);\n                    this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n                    this.el.nativeElement.addEventListener('click', this.clickListener);\n                    this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n                }\n                else if (this.getOption('tooltipEvent') === 'focus') {\n                    this.focusListener = this.onFocus.bind(this);\n                    this.blurListener = this.onBlur.bind(this);\n                    let target = this.getTarget(this.el.nativeElement);\n                    target.addEventListener('focus', this.focusListener);\n                    target.addEventListener('blur', this.blurListener);\n                }\n            });\n        }\n    }\n    ngOnChanges(simpleChange) {\n        if (simpleChange.tooltipPosition) {\n            this.setOption({ tooltipPosition: simpleChange.tooltipPosition.currentValue });\n        }\n        if (simpleChange.tooltipEvent) {\n            this.setOption({ tooltipEvent: simpleChange.tooltipEvent.currentValue });\n        }\n        if (simpleChange.appendTo) {\n            this.setOption({ appendTo: simpleChange.appendTo.currentValue });\n        }\n        if (simpleChange.positionStyle) {\n            this.setOption({ positionStyle: simpleChange.positionStyle.currentValue });\n        }\n        if (simpleChange.tooltipStyleClass) {\n            this.setOption({ tooltipStyleClass: simpleChange.tooltipStyleClass.currentValue });\n        }\n        if (simpleChange.tooltipZIndex) {\n            this.setOption({ tooltipZIndex: simpleChange.tooltipZIndex.currentValue });\n        }\n        if (simpleChange.escape) {\n            this.setOption({ escape: simpleChange.escape.currentValue });\n        }\n        if (simpleChange.showDelay) {\n            this.setOption({ showDelay: simpleChange.showDelay.currentValue });\n        }\n        if (simpleChange.hideDelay) {\n            this.setOption({ hideDelay: simpleChange.hideDelay.currentValue });\n        }\n        if (simpleChange.life) {\n            this.setOption({ life: simpleChange.life.currentValue });\n        }\n        if (simpleChange.positionTop) {\n            this.setOption({ positionTop: simpleChange.positionTop.currentValue });\n        }\n        if (simpleChange.positionLeft) {\n            this.setOption({ positionLeft: simpleChange.positionLeft.currentValue });\n        }\n        if (simpleChange.disabled) {\n            this.setOption({ disabled: simpleChange.disabled.currentValue });\n        }\n        if (simpleChange.text) {\n            this.setOption({ tooltipLabel: simpleChange.text.currentValue });\n            if (this.active) {\n                if (simpleChange.text.currentValue) {\n                    if (this.container && this.container.offsetParent) {\n                        this.updateText();\n                        this.align();\n                    }\n                    else {\n                        this.show();\n                    }\n                }\n                else {\n                    this.hide();\n                }\n            }\n        }\n        if (simpleChange.autoHide) {\n            this.setOption({ autoHide: simpleChange.autoHide.currentValue });\n        }\n        if (simpleChange.tooltipOptions) {\n            this._tooltipOptions = { ...this._tooltipOptions, ...simpleChange.tooltipOptions.currentValue };\n            this.deactivate();\n            if (this.active) {\n                if (this.getOption('tooltipLabel')) {\n                    if (this.container && this.container.offsetParent) {\n                        this.updateText();\n                        this.align();\n                    }\n                    else {\n                        this.show();\n                    }\n                }\n                else {\n                    this.hide();\n                }\n            }\n        }\n    }\n    isAutoHide() {\n        return this.getOption('autoHide');\n    }\n    onMouseEnter(e) {\n        if (!this.container && !this.showTimeout) {\n            this.activate();\n        }\n    }\n    onMouseLeave(e) {\n        if (!this.isAutoHide()) {\n            const valid = DomHandler.hasClass(e.toElement, 'p-tooltip') || DomHandler.hasClass(e.toElement, 'p-tooltip-arrow') || DomHandler.hasClass(e.toElement, 'p-tooltip-text') || DomHandler.hasClass(e.relatedTarget, 'p-tooltip');\n            !valid && this.deactivate();\n        }\n        else {\n            this.deactivate();\n        }\n    }\n    onFocus(e) {\n        this.activate();\n    }\n    onBlur(e) {\n        this.deactivate();\n    }\n    onInputClick(e) {\n        this.deactivate();\n    }\n    onPressEscape() {\n        if (this.hideOnEscape) {\n            this.deactivate();\n        }\n    }\n    activate() {\n        this.active = true;\n        this.clearHideTimeout();\n        if (this.getOption('showDelay'))\n            this.showTimeout = setTimeout(() => {\n                this.show();\n            }, this.getOption('showDelay'));\n        else\n            this.show();\n        if (this.getOption('life')) {\n            let duration = this.getOption('showDelay') ? this.getOption('life') + this.getOption('showDelay') : this.getOption('life');\n            this.hideTimeout = setTimeout(() => {\n                this.hide();\n            }, duration);\n        }\n    }\n    deactivate() {\n        this.active = false;\n        this.clearShowTimeout();\n        if (this.getOption('hideDelay')) {\n            this.clearHideTimeout(); //life timeout\n            this.hideTimeout = setTimeout(() => {\n                this.hide();\n            }, this.getOption('hideDelay'));\n        }\n        else {\n            this.hide();\n        }\n    }\n    create() {\n        if (this.container) {\n            this.clearHideTimeout();\n            this.remove();\n        }\n        this.container = document.createElement('div');\n        let tooltipArrow = document.createElement('div');\n        tooltipArrow.className = 'p-tooltip-arrow';\n        this.container.appendChild(tooltipArrow);\n        this.tooltipText = document.createElement('div');\n        this.tooltipText.className = 'p-tooltip-text';\n        this.updateText();\n        if (this.getOption('positionStyle')) {\n            this.container.style.position = this.getOption('positionStyle');\n        }\n        this.container.appendChild(this.tooltipText);\n        if (this.getOption('appendTo') === 'body')\n            document.body.appendChild(this.container);\n        else if (this.getOption('appendTo') === 'target')\n            DomHandler.appendChild(this.container, this.el.nativeElement);\n        else\n            DomHandler.appendChild(this.container, this.getOption('appendTo'));\n        this.container.style.display = 'inline-block';\n        if (this.fitContent) {\n            this.container.style.width = 'fit-content';\n        }\n        if (!this.isAutoHide()) {\n            this.bindContainerMouseleaveListener();\n        }\n    }\n    bindContainerMouseleaveListener() {\n        if (!this.containerMouseleaveListener) {\n            const targetEl = this.container ?? this.container.nativeElement;\n            this.containerMouseleaveListener = this.renderer.listen(targetEl, 'mouseleave', (e) => {\n                this.deactivate();\n            });\n        }\n    }\n    unbindContainerMouseleaveListener() {\n        if (this.containerMouseleaveListener) {\n            this.bindContainerMouseleaveListener();\n            this.containerMouseleaveListener = null;\n        }\n    }\n    show() {\n        if (!this.getOption('tooltipLabel') || this.getOption('disabled')) {\n            return;\n        }\n        this.create();\n        this.align();\n        DomHandler.fadeIn(this.container, 250);\n        if (this.getOption('tooltipZIndex') === 'auto')\n            ZIndexUtils.set('tooltip', this.container, this.config.zIndex.tooltip);\n        else\n            this.container.style.zIndex = this.getOption('tooltipZIndex');\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n    }\n    hide() {\n        if (this.getOption('tooltipZIndex') === 'auto') {\n            ZIndexUtils.clear(this.container);\n        }\n        this.remove();\n    }\n    updateText() {\n        if (this.getOption('escape')) {\n            this.tooltipText.innerHTML = '';\n            this.tooltipText.appendChild(document.createTextNode(this.getOption('tooltipLabel')));\n        }\n        else {\n            this.tooltipText.innerHTML = this.getOption('tooltipLabel');\n        }\n    }\n    align() {\n        let position = this.getOption('tooltipPosition');\n        switch (position) {\n            case 'top':\n                this.alignTop();\n                if (this.isOutOfBounds()) {\n                    this.alignBottom();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n            case 'bottom':\n                this.alignBottom();\n                if (this.isOutOfBounds()) {\n                    this.alignTop();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n            case 'left':\n                this.alignLeft();\n                if (this.isOutOfBounds()) {\n                    this.alignRight();\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n            case 'right':\n                this.alignRight();\n                if (this.isOutOfBounds()) {\n                    this.alignLeft();\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n        }\n    }\n    getHostOffset() {\n        if (this.getOption('appendTo') === 'body' || this.getOption('appendTo') === 'target') {\n            let offset = this.el.nativeElement.getBoundingClientRect();\n            let targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n            let targetTop = offset.top + DomHandler.getWindowScrollTop();\n            return { left: targetLeft, top: targetTop };\n        }\n        else {\n            return { left: 0, top: 0 };\n        }\n    }\n    alignRight() {\n        this.preAlign('right');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + this.getOption('positionLeft') + 'px';\n        this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    alignLeft() {\n        this.preAlign('left');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + this.getOption('positionLeft') + 'px';\n        this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    alignTop() {\n        this.preAlign('top');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n        this.container.style.left = left + this.getOption('positionLeft') + 'px';\n        this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    alignBottom() {\n        this.preAlign('bottom');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n        this.container.style.left = left + this.getOption('positionLeft') + 'px';\n        this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    setOption(option) {\n        this._tooltipOptions = { ...this._tooltipOptions, ...option };\n    }\n    getOption(option) {\n        return this._tooltipOptions[option];\n    }\n    getTarget(el) {\n        return DomHandler.hasClass(el, 'p-inputwrapper') ? DomHandler.findSingle(el, 'input') : el;\n    }\n    preAlign(position) {\n        this.container.style.left = -999 + 'px';\n        this.container.style.top = -999 + 'px';\n        let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n        this.container.className = this.getOption('tooltipStyleClass') ? defaultClassName + ' ' + this.getOption('tooltipStyleClass') : defaultClassName;\n    }\n    isOutOfBounds() {\n        let offset = this.container.getBoundingClientRect();\n        let targetTop = offset.top;\n        let targetLeft = offset.left;\n        let width = DomHandler.getOuterWidth(this.container);\n        let height = DomHandler.getOuterHeight(this.container);\n        let viewport = DomHandler.getViewport();\n        return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n    }\n    onWindowResize(e) {\n        this.hide();\n    }\n    bindDocumentResizeListener() {\n        this.zone.runOutsideAngular(() => {\n            this.resizeListener = this.onWindowResize.bind(this);\n            window.addEventListener('resize', this.resizeListener);\n        });\n    }\n    unbindDocumentResizeListener() {\n        if (this.resizeListener) {\n            window.removeEventListener('resize', this.resizeListener);\n            this.resizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n                if (this.container) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    unbindEvents() {\n        if (this.getOption('tooltipEvent') === 'hover') {\n            this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n            this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n            this.el.nativeElement.removeEventListener('click', this.clickListener);\n        }\n        else if (this.getOption('tooltipEvent') === 'focus') {\n            let target = this.getTarget(this.el.nativeElement);\n            target.removeEventListener('focus', this.focusListener);\n            target.removeEventListener('blur', this.blurListener);\n        }\n        this.unbindDocumentResizeListener();\n    }\n    remove() {\n        if (this.container && this.container.parentElement) {\n            if (this.getOption('appendTo') === 'body')\n                document.body.removeChild(this.container);\n            else if (this.getOption('appendTo') === 'target')\n                this.el.nativeElement.removeChild(this.container);\n            else\n                DomHandler.removeChild(this.container, this.getOption('appendTo'));\n        }\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.unbindContainerMouseleaveListener();\n        this.clearTimeouts();\n        this.container = null;\n        this.scrollHandler = null;\n    }\n    clearShowTimeout() {\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n            this.showTimeout = null;\n        }\n    }\n    clearHideTimeout() {\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n    }\n    clearTimeouts() {\n        this.clearShowTimeout();\n        this.clearHideTimeout();\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.container) {\n            ZIndexUtils.clear(this.container);\n        }\n        this.remove();\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n    }\n}\nTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: Tooltip, deps: [{ token: PLATFORM_ID }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i1.PrimeNGConfig }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nTooltip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.4\", type: Tooltip, selector: \"[pTooltip]\", inputs: { tooltipPosition: \"tooltipPosition\", tooltipEvent: \"tooltipEvent\", appendTo: \"appendTo\", positionStyle: \"positionStyle\", tooltipStyleClass: \"tooltipStyleClass\", tooltipZIndex: \"tooltipZIndex\", escape: \"escape\", showDelay: \"showDelay\", hideDelay: \"hideDelay\", life: \"life\", positionTop: \"positionTop\", positionLeft: \"positionLeft\", autoHide: \"autoHide\", fitContent: \"fitContent\", hideOnEscape: \"hideOnEscape\", text: [\"pTooltip\", \"text\"], disabled: [\"tooltipDisabled\", \"disabled\"], tooltipOptions: \"tooltipOptions\" }, host: { listeners: { \"document:keydown.escape\": \"onPressEscape($event)\" }, classAttribute: \"p-element\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: Tooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pTooltip]',\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.PrimeNGConfig }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { tooltipPosition: [{\n                type: Input\n            }], tooltipEvent: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], positionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], tooltipZIndex: [{\n                type: Input\n            }], escape: [{\n                type: Input\n            }], showDelay: [{\n                type: Input\n            }], hideDelay: [{\n                type: Input\n            }], life: [{\n                type: Input\n            }], positionTop: [{\n                type: Input\n            }], positionLeft: [{\n                type: Input\n            }], autoHide: [{\n                type: Input\n            }], fitContent: [{\n                type: Input\n            }], hideOnEscape: [{\n                type: Input\n            }], text: [{\n                type: Input,\n                args: ['pTooltip']\n            }], disabled: [{\n                type: Input,\n                args: ['tooltipDisabled']\n            }], tooltipOptions: [{\n                type: Input\n            }], onPressEscape: [{\n                type: HostListener,\n                args: ['document:keydown.escape', ['$event']]\n            }] } });\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: TooltipModule, declarations: [Tooltip], imports: [CommonModule], exports: [Tooltip] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TooltipModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Tooltip],\n                    declarations: [Tooltip]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipModule };\n//# sourceMappingURL=primeng-tooltip.mjs.map\n"],"x_google_ignoreList":[2,7,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54]}