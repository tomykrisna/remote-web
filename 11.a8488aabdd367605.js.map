{"version":3,"file":"11.a8488aabdd367605.js","mappings":"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","names":["i0","ctx_r0","shortDescription","ctx_r1","content","$event","_r5","ctx_r4","setToggleReadMore","ctx_r2","seeMore","_r7","ctx_r6","setRedirect","ctx_r3","image","InboxCardComponent","constructor","router","sanitizer","gaService","this","isRead","readInboxId","EventEmitter","ngOnInit","bypassSecurityTrustHtml","description","category","CategoryInboxType","ALL","categoryName","CAMPAIGN","REMINDER","PROMO","INFO","event","stopPropagation","setReadInbox","emit","id","addEvent","broadcastName","link","path","type","InboxEventType","INTERNAL","split","window","location","protocol","host","length","navigate","then","open","EXTERNAL","static","t","i1","i2","i3","core_mjs_","selectors","inputs","title","date","outputs","decls","vars","consts","template","rf","ctx","InboxCardComponent_span_14_Template","InboxCardComponent_span_15_Template","InboxCardComponent_span_16_Template","InboxCardComponent_img_17_Template","_r13","ctx_r12","inbox_r10","inbox","createdAt","toString","imageUrl","eventType","_r16","ctx_r15","loadInBox","ListInboxComponent_div_0_div_1_div_15_lib_basic_button_2_Template","ctx_r9","canLoad","_r18","ctx_r17","markAllRead","ctx_r19","overviewFilter","ctx_r20","refreshInbox","ListInboxComponent_div_0_div_1_div_14_Template","ListInboxComponent_div_0_div_1_div_15_Template","limitString","label","listInbox","_r22","ctx_r21","ctx_r23","toBack","ListInboxComponent_div_0_div_1_Template","ListInboxComponent_div_0_div_2_Template","_r25","ctx_r24","isShowFilter","range_r27","_r29","$implicit","ctx_r28","setRange","name","ctx_r26","selectedRange","ListInboxComponent_ng_template_5_lib_basic_button_1_Template","listRange","ListInboxComponent","inboxService","RangeInboxType","DAY_14","DAY_7","totalPage","page","limit","isLoading","checkData","getListInbox","autoRefreshInbox","setInterval","clearInterval","fetchData","range","convertRangeLabel","value","substring","listUserInboxInput","filter","interval","listUserInbox","subscribe","next","data","ids","Set","map","d","concat","userInboxes","has","error","readUnreadUserInbox","readUnreadUserInboxInput","readUnreadAllInbox","readUnreadAllUserInboxInput","back","ngOnDestroy","ListInboxComponent_div_0_Template","ListInboxComponent_div_1_Template","ListInboxComponent_ng_template_3_Template","ListInboxComponent_ng_template_5_Template","routes","component","BasicContainerComponent","canGoBack","children","InboxRoutingModule","RouterModule","forChild","InboxModule","CommonModule","PipeModule","InfiniteScrollModule","ButtonModule","ModalModule","SkeletonModule","EmptyStateModule"],"sourceRoot":"webpack:///","sources":["./apps/youtap-bos/src/app/main/inbox/inbox-card/inbox-card.component.html","./apps/youtap-bos/src/app/main/inbox/inbox-card/inbox-card.component.ts","./apps/youtap-bos/src/app/main/inbox/list-inbox/list-inbox.component.html","./apps/youtap-bos/src/app/main/inbox/list-inbox/list-inbox.component.ts","./apps/youtap-bos/src/app/main/inbox/inbox-routing.module.ts","./apps/youtap-bos/src/app/main/inbox/inbox.module.ts"],"sourcesContent":["<div class=\"px-[16px] pt-1 {{!isRead ? 'bg-blue-100' : '' }} cursor-pointer\" (click)=\"setReadInbox()\">\n  <div class=\"flex flex-row mt-4 border-b-[1px] border-grey-5 pb-1\">\n    <div class=\"mr-[10px]\">\n      <img src=\"/assets/images/svg/info-blue.svg\" width=\"24px\" height=\"24px\" class=\"\" alt=\"info-icon\"/>\n    </div>\n    <div class=\"flex-row w-full\">\n      <div class=\"flex flex-row justify-between\">\n        <span class=\"text-grey-3 text-[12px]\">{{categoryName}}</span>\n        <span class=\"text-grey-3 text-[12px]\">{{date | formatDate : 'DD MMMM YYYY | HH:mm' : false}}</span>\n      </div>\n      <h3 class=\"text-[14px] text-xl\">{{title}}</h3>\n      <div class=\"text-[14px]\" >\n        <span *ngIf=\"!seeMore\">{{shortDescription}}</span>\n        <span  *ngIf=\"seeMore\" [innerHtml]=\"content\"></span>\n        <span\n          class=\"text-primary-yt-blue text-[14px] cursor-pointer underline\"\n          (click)=\"setToggleReadMore($event)\" *ngIf=\"!seeMore\">\n            {{ !seeMore ? \"Read More\" : \"See Less\" }}\n        </span>\n      </div>\n      <img [src]=\"image\" class=\"!w-full !h-auto\" alt=\"\" *ngIf=\"image\" alt=\"inbox-image\" (click)=\"setRedirect()\"/>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport {GaService} from \"../../../shared/service/ga.service\";\nimport {CategoryInboxType, InboxEventType} from \"@youtap-web-lib\";\n\n@Component({\n  selector: \"inbox-card\",\n  templateUrl: \"./inbox-card.component.html\",\n  styleUrls: [\"./inbox-card.component.scss\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class InboxCardComponent implements OnInit {\n  @Input() category!: CategoryInboxType;\n  @Input() title!: string;\n  @Input() description!: string;\n  @Input() date!: string;\n  @Input() image!: string;\n  @Input() isRead = true;\n  @Input() shortDescription!: string;\n  @Input() id: string | undefined;\n  @Input() type: InboxEventType | undefined;\n  @Input() link!: string;\n  @Input() broadcastName!: string;\n  seeMore = false;\n  categoryName!: string;\n  content!: string;\n  @Output() readInboxId: EventEmitter<string> = new EventEmitter();\n\n  constructor(private router: Router,\n              protected sanitizer: DomSanitizer,\n              private gaService: GaService) {\n  }\n\n  ngOnInit() {\n    this.content = this.sanitizer.bypassSecurityTrustHtml(this.description) as string;\n\n    switch (this.category) {\n      case CategoryInboxType.ALL:\n        this.categoryName = \"Semua\";\n        break;\n      case CategoryInboxType.CAMPAIGN:\n        this.categoryName = \"Campaign\";\n        break;\n      case CategoryInboxType.REMINDER:\n        this.categoryName = \"Reminder\";\n        break;\n      case CategoryInboxType.PROMO:\n        this.categoryName = \"Promo\";\n        break;\n      case CategoryInboxType.INFO:\n        this.categoryName = \"Info\";\n        break;\n    }\n  }\n\n  setToggleReadMore(event: Event) {\n    event.stopPropagation();\n    this.seeMore = !this.seeMore;\n    this.setReadInbox();\n  }\n\n  setReadInbox() {\n    if (!this.isRead) {\n      this.isRead = true;\n      this.readInboxId.emit(this.id);\n    }\n  }\n\n  setRedirect() {\n    this.gaService.addEvent('inbox detail ' + this.broadcastName, 'banner', \"\")\n    this.setReadInbox();\n    if (this.link) {\n      let path;\n      switch (this.type) {\n        case InboxEventType.INTERNAL:\n          path = this.link.split(\n            window.location.protocol + \"//\" + window.location.host\n          );\n          if (path.length === 2) {\n            this.router.navigate([path[1]]).then();\n          } else {\n            window.open(this.link, \"_blank\");\n          }\n          break;\n        case InboxEventType.EXTERNAL:\n          window.open(this.link, \"_blank\");\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n","<div\n  *ngIf=\"!isLoading\"\n  class=\"mt-[3%] h-[99%] overflow-y-scroll scrollbar-hide bg-grey-6\">\n  <div *ngIf=\"listInbox.length > 0\">\n    <div class=\"flex flex-col p-[16px] gap-2 sticky top-0 bg-white\">\n      <div class=\"flex flex-row justify-between gap-x-2\">\n        <h3\n          class=\"my-auto text-[12px] text-primary-yt-blue cursor-pointer\"\n          (click)=\"markAllRead()\">\n          Tandai semua dibaca\n        </h3>\n        <div class=\"flex flex-row gap-x-2\">\n          <div\n            class=\"rounded-lg border-2 px-2 py-1 flex h-8 items-center border-blue\"\n            (click)=\"overviewFilter()\">\n            <p class=\"mr-2 pt-1 text-sm text-blue\">\n              {{limitString(label, 7)}}\n            </p>\n            <img src=\"./assets/images/svg/arrow-down.svg\" class=\"w-5\" />\n          </div>\n          <div class=\"mt-1\" (click)=\"refreshInbox()\">\n            <img src=\"./assets/images/svg/reload.svg\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div>\n      <div class=\"pb-[16px] rounded-b-[20px] bg-white\">\n        <div *ngFor=\"let inbox of listInbox; let i = index\">\n          <inbox-card\n            [id]=\"inbox.id\"\n            [shortDescription]=\"inbox.inbox.shortDescription\"\n            [description]=\"inbox.inbox.description\"\n            [isRead]=\"inbox.isRead\"\n            [date]=\"inbox.inbox.createdAt.toString()\"\n            [title]=\"inbox.inbox.title\"\n            [image]=\"inbox.inbox.imageUrl\"\n            [category]=\"inbox.inbox.category\"\n            (readInboxId)=\"setReadInbox($event)\"\n            [type]=\"inbox.inbox.eventType\"\n            [link]=\"inbox.inbox.link\"\n            [broadcastName]=\"inbox.inbox.broadcastName\"></inbox-card>\n        </div>\n      </div>\n      <div class=\"py-[3%] bg-grey-6\" *ngIf=\"listInbox.length && canLoad\">\n        <div class=\"bg-white p-[16px]\">\n          <lib-basic-button\n            *ngIf=\"canLoad\"\n            [outlined]=\"true\"\n            title=\"Lihat Lebih Banyak\"\n            [borderColor]=\"'blue'\"\n            width=\"w-full\"\n            (handleEmit)=\"loadInBox()\"></lib-basic-button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bg-white text-center py-5 mt-4\" *ngIf=\"listInbox.length === 0\">\n    <lib-basic-empty-state\n      [image]=\"'./assets/images/png/inbox-empty-state.png'\"\n      [label]=\"'Belum ada inbox'\"\n      [description]=\"'Nantikan program menarik dari Youtap!'\"\n      [showButton]=\"true\"\n      [buttonWidth]=\"'!w-auto'\"\n      [buttonLabel]=\"'Refresh Inbox'\"\n      (clickButton)=\"refreshInbox()\"\n      [showButtonSecondary]=\"true\"\n      [buttonLabelSecondary]=\"'Kembali ke Halaman Utama'\"\n      (clickButtonSecondary)=\"toBack()\"></lib-basic-empty-state>\n  </div>\n</div>\n\n<div class=\"flex flex-col items-center mt-4\" *ngIf=\"isLoading\">\n  <img\n    src=\"./assets/images/png/kasir-digital.png\"\n    width=\"200px\"\n    alt=\"kasir-digital\" />\n  <h6 class=\"text-[16px] text-grey-1 font-medium mt-2 text-center\">\n    Tunggu sebentar yah..\n  </h6>\n  <span class=\"text-[10px] text-grey-3 text-center mb-5\"\n    >kita lagi refresh inboxnya..</span\n  >\n  <img class=\"pb-5\" src=\"./assets/images/svg/loading.svg\" />\n</div>\n\n<lib-bottom-modal [showModal]=\"isShowFilter\">\n  <ng-template #headerTemplate>\n    <div\n      class=\"flex flex-row justify-between items-center z-10 relative h-[5vh]\">\n      <span>Filter</span>\n      <i class=\"pi pi-times\" (click)=\"isShowFilter = !isShowFilter\"></i>\n    </div>\n  </ng-template>\n  <ng-template #bodyTemplate>\n    <div\n      class=\"flex flex-col gap-y-2 mt-3 max-h-[50vh] overflow-y-scroll scrollbar-hide\">\n      <lib-basic-button\n        [title]=\"range.name\"\n        [borderColor]=\"'blue'\"\n        [width]=\"'w-full'\"\n        [textColor]=\"\n          range.type === selectedRange ? 'text-white' : 'text-primary-yt-blue'\n        \"\n        [outlined]=\"range.type !== selectedRange\"\n        (handleEmit)=\"setRange(range.type)\"\n        *ngFor=\"let range of listRange\"></lib-basic-button>\n    </div>\n  </ng-template>\n</lib-bottom-modal>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { InboxService, ListUserInboxInput, RangeInboxType, UserInbox } from \"@youtap-web-lib\";\n\n@Component({\n  selector: 'list-inbox',\n  templateUrl: './list-inbox.component.html'\n})\nexport class ListInboxComponent implements OnInit, OnDestroy {\n  listInbox: UserInbox[] = [];\n  listRange = [\n    {\n      name: 'Semua Notifikasi',\n      type: RangeInboxType.ALL\n    },\n    {\n      name: '14 hari Terakhir',\n      type: RangeInboxType.DAY_14\n    },\n    {\n      name: '7 hari Terakhir',\n      type: RangeInboxType.DAY_7\n    }\n  ];\n  totalPage = 10;\n  page = 1;\n  limit = 10;\n  isShowFilter = false;\n  label = 'Filter';\n  selectedRange = RangeInboxType.ALL;\n  isLoading = true;\n  canLoad = false;\n  checkData = 0\n\n  constructor(private inboxService: InboxService, private location: Location) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.getListInbox();\n    this.autoRefreshInbox()\n  }\n\n  refreshInbox() {\n    this.listInbox = [];\n    this.isLoading = true;\n    this.getListInbox();\n  }\n\n  autoRefreshInbox() {\n    this.checkData = setInterval((id) => {\n      this.getListInbox()\n      clearInterval(id)\n    }, 5000)\n  }\n\n  fetchData() {\n    this.page = 1;\n    this.listInbox = [];\n    this.isLoading = true;\n    this.getListInbox();\n  }\n\n\n  overviewFilter() {\n    this.isShowFilter = !this.isShowFilter;\n  }\n\n  setRange(range: RangeInboxType) {\n    this.page = 1;\n    if (this.selectedRange !== range) {\n      this.label = this.convertRangeLabel(range);\n      this.selectedRange = range;\n      this.isShowFilter = false;\n      this.fetchData();\n    }\n  }\n\n  convertRangeLabel(label: string) {\n    switch (label) {\n      case RangeInboxType.ALL:\n        return 'Semua Notifikasi';\n        break;\n      case RangeInboxType.DAY_14:\n        return '14 Hari Terakhir';\n        break;\n      case RangeInboxType.DAY_7:\n        return '7 Hari Terakhir';\n        break;\n      default:\n        return 'Filter';\n        break;\n    }\n  }\n\n  limitString(value: string, limit: number): string {\n    if (value.length > limit) {\n      return value.substring(0, limit) + '...';\n    }\n    return value;\n  }\n\n  getListInbox() {\n    this.canLoad = true;\n    const listUserInboxInput: ListUserInboxInput = {\n      page: this.page,\n      limit: this.limit,\n      filter: {}\n    };\n    if (this.selectedRange !== RangeInboxType.ALL) {\n      listUserInboxInput.filter = {\n        interval: this.selectedRange\n      };\n    }\n    this.inboxService.listUserInbox({ listUserInboxInput }).subscribe({\n      next: ({ data }) => {\n        this.totalPage = data.listUserInbox.totalPage || 0;\n        const ids = new Set(this.listInbox.map(d => d.id));\n        this.listInbox = this.listInbox.concat(data.listUserInbox.userInboxes.filter(d => !ids.has(d.id)));\n        this.isLoading = false;\n        if (this.page === data.listUserInbox.totalPage) {\n          this.canLoad = false;\n        }\n      },\n      error: () => {\n        this.isLoading = false;\n      }\n    });\n  }\n\n  setReadInbox(id: string) {\n    this.inboxService\n      .readUnreadUserInbox({\n        readUnreadUserInboxInput: { isRead: true, ids: [id] }\n      })\n      .subscribe({\n        next: () => {\n          // this.listInbox[index].isRead = true;\n        }\n      });\n  }\n\n  markAllRead() {\n    this.inboxService\n      .readUnreadAllInbox({ readUnreadAllUserInboxInput: { isRead: true } })\n      .subscribe({\n        next: (data) => {\n          if (data) {\n            this.fetchData();\n          }\n        }\n      });\n  }\n\n  loadInBox() {\n    this.page = this.page + 1;\n    if (this.canLoad) {\n      this.getListInbox();\n    }\n  }\n\n  toBack() {\n    this.location.back();\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.checkData)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListInboxComponent } from './list-inbox/list-inbox.component';\nimport { BasicContainerComponent } from '../../shared/layout/container/basic-container/basic-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BasicContainerComponent,\n    data: {\n      canGoBack: true\n    },\n    children: [\n      {\n        path: '',\n        component: ListInboxComponent,\n        title: 'Inbox'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InboxRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InboxRoutingModule } from './inbox-routing.module';\nimport { ListInboxComponent } from './list-inbox/list-inbox.component';\nimport { InboxCardComponent } from './inbox-card/inbox-card.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport {ButtonModule, EmptyStateModule, ModalModule, PipeModule} from '@youtap-web-lib';\nimport { SkeletonModule } from 'primeng/skeleton';\n\n@NgModule({\n  declarations: [ListInboxComponent, InboxCardComponent, InboxCardComponent],\n  imports: [\n    CommonModule,\n    InboxRoutingModule,\n    PipeModule,\n    InfiniteScrollModule,\n    ButtonModule,\n    ModalModule,\n    SkeletonModule,\n    EmptyStateModule\n  ]\n})\nexport class InboxModule {}\n"],"x_google_ignoreList":[]}